<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>그룹 관리</title>
<style>
/* CSS는 이전과 거의 동일 */
    body {
        font-family: sans-serif;
    }
    main.emp-content {
        width: 90%;
        margin: 20px auto;
    }
    .artist-search-box {
        margin-bottom: 20px;
        display: flex;
        gap: 10px;
    }
    .artist-search-box input[type="text"] {
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        flex-grow: 1;
    }
    .artist-search-box button {
        padding: 8px 15px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
    .artist-search-box button:hover {
        background-color: #0056b3;
    }
    table.artist-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        table-layout: fixed;
    }
    th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: left;
        vertical-align: middle;
        word-wrap: break-word;
    }
    th {
        background-color: #f2f2f2;
        font-weight: bold;
    }
    th.col-profile-path, td.col-profile-path {
        width: 30%;
    }
    th.col-actions, td.col-actions {
        width: 10%;
    }

    .action-button {
        padding: 6px 12px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9em;
    }
    .action-button:hover {
        background-color: #218838;
    }
    .modal-actions {
        text-align: right;
        margin-top: 20px;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 25px;
        border: 1px solid #888;
        width: 60%;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
            rgba(0, 0, 0, 0.19);
        border-radius: 5px;
    }

    .close-button {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close-button:hover, .close-button:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    .modal-content hr {
        margin-top: 5px;
        margin-bottom: 15px;
    }

    .modal-content div.form-group {
        margin-bottom: 15px;
    }
    .modal-content input[type="text"],
    .modal-content input[type="file"], /* file input 스타일 추가 */
    .modal-content textarea {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-top: 4px;
        box-sizing: border-box;
    }
    .modal-content input[readonly] { /* 읽기전용 필드 스타일 */
        background-color: #e9ecef;
    }
    .modal-content textarea {
        resize: vertical;
    }
    .form-group label {
        display: block;
        margin-bottom: 3px;
        font-weight: bold;
    }
    small {
        font-size: 0.85em;
        color: #6c757d;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<%@ include file="../../modules/headerPart.jsp" %>
<%@ include file="../../admin/modules/aside.jsp" %>
<%@ include file="../../admin/modules/header.jsp" %>
</head>
<body>
    <main class="emp-content">
		<h1>그룹 목록</h1>
	
		<c:if test="${not empty artistGroupList}">
			<table>
				<thead>
					<tr>
						<th>그룹 번호</th>
						<th class="col-profile-path">프로필 이미지 경로</th>
						<th>그룹명</th>
						<th>데뷔일자</th>
						<th>최근 수정일</th>
						<th>관리</th>
					</tr>
				</thead>
				<tbody>
					<c:forEach items="${artistGroupList}" var="group">
						<tr>
							<td>${group.artGroupNo}</td>
							<td>${group.artGroupProfileImg}</td>
							<td><c:out value="${group.artGroupNm}" /></td>
							<td><c:out value="${group.artGroupDebutdate}"/></td>
							<td><fmt:formatDate value="${group.artGroupModDate}"
									pattern="yyyy-MM-dd HH:mm:ss" /></td>
							<td>
	                            <c:set var="initialMembersJsonString" value="[]" />
	                            <c:if test="${not empty group.artistVOs}">
	                                <c:set var="jsonBuilder">
	                                    <c:forEach items="${group.artistVOs}" var="artist" varStatus="loopStatus">
	                                        {"artNo": "${artist.artNo}", "artNm": "<c:out value='${artist.artNm}' escapeXml='true' />"}${!loopStatus.last ? ',' : ''}
	                                    </c:forEach>
	                                </c:set>
	                                <c:set var="initialMembersJsonString" value="[${jsonBuilder}]" />
	                            </c:if>
								<button class="action-button edit-group-btn"
									data-group-no="${group.artGroupNo}"
									data-group-nm="<c:out value='${group.artGroupNm}'/>"
									data-group-debutdate="${group.artGroupDebutdate}"
									data-group-typecode="${group.artGroupTypeCode}"
									data-group-initial-members='${initialMembersJsonString}'
									data-group-content="<c:out value='${group.artGroupContent}'/>"
									data-group-profileimg="${group.artGroupProfileImg}">수정</button>
							</td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</c:if>
	<c:if test="${empty artistGroupList}">
		<p style="text-align: center;">등록된 그룹이 없습니다.</p>
	</c:if>
	</main>
	<div id="editGroupModal" class="modal">
		<div class="modal-content">
			<span class="close-button">&times;</span>
			<h2>그룹 정보 수정</h2>
			<hr>
			<form id="editGroupForm">
				<input type="hidden" id="modalGroupNo" name="artGroupNo">
                <div class="form-group">
                    <label for="modalGroupName">그룹명:</label>
                    <input type="text" id="modalGroupName" name="artGroupNm" class="form-control">
                </div>
                <div class="form-group">
                    <label for="modalDebutDate">데뷔일:</label>
                    <input type="text" id="modalDebutDate" name="artGroupDebutdate" class="form-control">
                </div>
                <div class="form-group">
                    <fieldset>
				        <legend style="font-weight: bold; padding: 0; margin-bottom: 5px; border: 0; display: block; width:auto;">활동유형:</legend>
				        <div class="radio-options-wrapper" style="display: block; margin-left: 0px; margin-top: 5px;">
				            <label class="radio-label" for="artGroupTypeGroup" style="margin-right: 15px; cursor:pointer; font-weight:normal;">
				                <input type="radio" name="artGroupTypeCode" value="AGTC001" id="artGroupTypeGroup"> 그룹
				            </label>
				            <label class="radio-label" for="artGroupTypeSolo" style="cursor:pointer; font-weight:normal;">
				                <input type="radio" name="artGroupTypeCode" value="AGTC002" id="artGroupTypeSolo"> 솔로
				            </label>
				        </div>
				    </fieldset>
                </div>
                <div class="form-group">
                    <fieldset>
				        <legend class="form-label" style="font-weight: bold; padding: 0; margin-bottom: 10px; border: 0; display: block; width: auto;">소속멤버</legend>
				        <div id="selectedMembersContainer" class="members-container" style="margin-bottom: 10px; min-height: 40px; border: 1px solid #ddd; padding: 8px; border-radius: 4px;">
				        </div>
				        <div class="input-group-for-member-add" style="display: flex; gap: 8px; align-items: center; margin-bottom: 10px;">
				            <select id="artistSelect" class="form-control" style="flex-grow: 1;">
				                <option value="">-- 아티스트 선택 --</option>
				                <c:forEach items="${allArtists}" var="artist">
				                    <option value="${artist.artNo}"><c:out value="${artist.artNm}"/></option>
				                </c:forEach>
				            </select>
				            <button type="button" id="addMemberBtn" class="action-button" style="white-space: nowrap;">멤버 추가</button>
				        </div>
				        <input type="hidden" id="memberArtNosInput" name="memberArtNos" />
				    </fieldset>
                </div>
                <div class="form-group">
                    <label for="modalGroupContent">소개글:</label>
                    <textarea id="modalGroupContent" name="artGroupContent" rows="4" class="form-control"></textarea>
                </div>
                <div class="form-group">
                    <label for="modalGroupProfileFileSelect">프로필 이미지 파일 선택:</label>
                    <input type="file" id="modalGroupProfileFileSelect" accept="image/*" class="form-control-file">
                    <small>파일을 선택하면 아래 경로가 자동으로 완성됩니다.</small>
                </div>
                <div class="form-group">
                    <label for="modalGroupProfileImgPath">서버 저장 경로:</label>
                    <input type="text" id="modalGroupProfileImgPath" name="artGroupProfileImg" readonly placeholder="파일 선택 시 자동 완성됩니다." class="form-control">
                     <small>`C:\upload\profile\group\` 폴더에 해당 파일이 있어야 합니다.</small>
                </div>
                
                <div class="modal-actions">
					<button type="button" class="action-button" id="saveGroupChangesBtn">저장</button>
				</div>
			</form>
		</div>
	</div>
	<script>
	$(function() { 
	    const $editGroupModal = $('#editGroupModal'); // 모달 전체
	    const $closeButton = $editGroupModal.find('.close-button'); // 닫기 버튼
        const $editGroupForm = $('#editGroupForm'); // 폼 객체 (AJAX 시 사용 가능)

	    // 모달 내부 필드
	    const $modalGroupNo = $('#modalGroupNo');
	    const $modalGroupName = $('#modalGroupName');
	    const $modalDebutDate = $('#modalDebutDate');
	    // const $modalGroupProfileImg = $('#modalGroupProfileImg'); // 이전 변수, 아래 새 변수로 대체
	    const $modalGroupContent = $('#modalGroupContent');

        // 프로필 이미지 관련 새 jQuery 객체
        const $modalGroupProfileFileSelect = $('#modalGroupProfileFileSelect');
        const $modalGroupProfileImgPath = $('#modalGroupProfileImgPath');

        // 그룹 프로필 이미지를 위한 서버 고정 기본 경로
        const groupServerHardcodedBasePath = "C:\\upload\\profile\\group\\"; // 경로 마지막에 \ 추가

	    // 소속멤버 관련 요소
	    const $selectedMembersContainer = $('#selectedMembersContainer');
	    const $artistSelect = $('#artistSelect');
	    const $addMemberBtn = $('#addMemberBtn');
	    const $memberArtNosInput = $('#memberArtNosInput');

	    let currentMemberArtNos = [];

	    function renderMemberTag(artNo, artNm) {
	        const artNoStr = String(artNo);
	        if (currentMemberArtNos.includes(artNoStr)) {
	            alert("이미 추가된 멤버입니다.");
	            return;
	        }
	        const $tag = $('<span></span>').addClass('member-tag').text(artNm).data('artNo', artNoStr);
	        const $removeBtn = $('<button></button>').addClass('remove-member-btn').html('&times;').attr('type', 'button');
	        $removeBtn.on('click', function() {
	            $tag.remove();
	            currentMemberArtNos = currentMemberArtNos.filter(id => id !== artNoStr);
	            updateMemberArtNosInput();
	        });
	        $tag.append($removeBtn).appendTo($selectedMembersContainer);
	        currentMemberArtNos.push(artNoStr);
	        updateMemberArtNosInput();
	    }

	    function updateMemberArtNosInput() {
	        $memberArtNosInput.val(currentMemberArtNos.join(','));
	    }

	    $addMemberBtn.on('click', function() {
	        const $selectedOption = $artistSelect.find('option:selected');
	        if ($selectedOption.length && $selectedOption.val()) {
	            renderMemberTag($selectedOption.val(), $selectedOption.text());
	            $artistSelect.val("");
	        } else {
	            alert("아티스트를 선택해주세요.");
	        }
	    });

	    // '수정' 버튼 클릭 이벤트
	    $('.edit-group-btn').on('click', function () {
	        const $this = $(this);
	        const groupNo = $this.data('groupNo');
	        const groupNm = $this.data('groupNm');
	        const debutDate = $this.data('groupDebutdate');
	        const typeCode = $this.data('groupTypecode');
	        const initialMembersJson = $this.data('groupInitialMembers');
	        const content = $this.data('groupContent');
	        const profileImgPath = $this.data('groupProfileimg'); // DB에 저장된 현재 프로필 이미지 경로

	        // 모달 기본 필드 채우기
	        $modalGroupNo.val(groupNo || '');
	        $modalGroupName.val(groupNm || '');
	        $modalDebutDate.val(debutDate || '');
	        $modalGroupContent.val(content || '');
            
            // 프로필 이미지 경로 필드 채우기 및 파일 선택 input 초기화
            $modalGroupProfileImgPath.val(profileImgPath || '');
            $modalGroupProfileFileSelect.val(''); // 파일 선택 input은 항상 비워줌

	        // 활동유형 라디오 버튼 선택
	        $('input[name="artGroupTypeCode"]').prop('checked', false); // 일단 모두 해제
	        if (typeCode === 'AGTC001') {
	            $('#artGroupTypeGroup').prop('checked', true);
	        } else if (typeCode === 'AGTC002') {
	            $('#artGroupTypeSolo').prop('checked', true);
	        }

	        // 소속멤버 초기화 및 채우기
	        $selectedMembersContainer.empty();
	        currentMemberArtNos = [];
	        if (initialMembersJson && initialMembersJson.length > 0) { // Ensure it's not an empty "[]" string if not parsed yet
	            let initialMembers;
	            try {
                    // Check if initialMembersJson is already an array (it shouldn't be from data attribute directly)
                    // It should be a string like '[{...},{...}]'
	                if (typeof initialMembersJson === 'string') {
                        initialMembers = JSON.parse(initialMembersJson);
                    } else { // Fallback if it somehow became an object (less likely for this setup)
                        initialMembers = initialMembersJson;
                    }

	                if (Array.isArray(initialMembers)) {
	                    initialMembers.forEach(member => {
	                        if(member && typeof member.artNo !== 'undefined' && typeof member.artNm !== 'undefined') {
	                            renderMemberTag(member.artNo, member.artNm);
	                        }
	                    });
	                }
	            } catch (e) {
	                console.error("초기 멤버 정보 파싱 오류:", e, "\nJSON 데이터:", initialMembersJson);
                    // If initialMembersJson was an empty array string "[]", JSON.parse("[]") is valid
	            }
	        }
	        updateMemberArtNosInput();

	        $editGroupModal.css('display', 'block');
	    });

        // 프로필 이미지 파일 선택 시 경로 자동 완성 이벤트 핸들러
        $modalGroupProfileFileSelect.on('change', function(event) {
            const files = event.target.files;
            if (files && files.length > 0) {
                const fileName = files[0].name;
                const fullServerPath = groupServerHardcodedBasePath + fileName;
                $modalGroupProfileImgPath.val(fullServerPath);
            } else {
                // 파일 선택 취소 시, 기존에 표시되던 경로(모달 열릴 때 설정된 값)를 유지하거나 비움
                // 여기서는 비우도록 처리. 필요시, 모달 열 때의 값을 임시 저장했다가 복원 가능.
                $modalGroupProfileImgPath.val(''); 
            }
        });

	    // 모달 닫기 로직
	    $closeButton.on('click', function () {
	        $editGroupModal.css('display', 'none');
	    });

	    $(window).on('click', function (event) {
	        if ($(event.target).is($editGroupModal)) { // Check if $editGroupModal is the target
	            $editGroupModal.css('display', 'none');
	        }
	    });

	    // '저장' 버튼 이벤트
	    $('#saveGroupChangesBtn').on('click', function() {
	        const groupData = {
	            artGroupNo: $modalGroupNo.val(),
	            artGroupNm: $modalGroupName.val(),
	            artGroupDebutdate: $modalDebutDate.val(),
	            artGroupTypeCode: $('input[name="artGroupTypeCode"]:checked').val(),
	            artGroupContent: $modalGroupContent.val(),
	            artGroupProfileImg: $modalGroupProfileImgPath.val(), // 수정된 경로 필드 값 사용
	            memberArtNos: $memberArtNosInput.val()
	        };

	        console.log("저장할 그룹 데이터:", groupData);
	        // alert('저장 버튼 클릭됨! 콘솔에서 전송될 데이터를 확인하세요.'); // 실제 운영 시 주석 처리 또는 제거

	        $.ajax({
	            url: '${pageContext.request.contextPath}/emp/group/update',
	            type: 'POST',
	            contentType: 'application/json',
	            data: JSON.stringify(groupData), 
	            beforeSend : function(xhr) {
			        xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			    },
	            success: function(response) {
                    // 서버 응답이 success boolean과 message string을 포함한 JSON이라고 가정
                    if(response && response.success) {
	                    alert(response.message || '그룹 정보가 성공적으로 저장되었습니다.');
	                    location.reload(); // 성공 시 페이지 새로고침
                    } else {
                        alert(response.message || '그룹 정보 저장 중 문제가 발생했습니다.');
                    }
	            },
	            error: function(xhr, status, error) {
	                console.error("저장 실패:", xhr.status, error, xhr.responseText);
                    let errorMsg = '그룹 정보 저장에 실패했습니다.';
                    if(xhr.responseJSON && xhr.responseJSON.message) {
                        errorMsg += '\n오류: ' + xhr.responseJSON.message;
                    } else if (xhr.responseText) {
                        // Try to parse if it's a stringified JSON error from server validation etc.
                        try {
                            const responseObj = JSON.parse(xhr.responseText);
                            if(responseObj && responseObj.message) {
                                 errorMsg += '\n오류: ' + responseObj.message;
                            } else {
                                errorMsg += '\n서버 응답: ' + xhr.responseText.substring(0, 200); // 너무 길면 자르기
                            }
                        } catch(e) {
                             errorMsg += '\n서버 응답: ' + xhr.responseText.substring(0, 200);
                        }
                    }
	                alert(errorMsg);
	            },
                complete: function() { // 성공/실패 여부와 관계없이 모달을 닫고 싶지 않다면 이 부분에서 처리
                    // $editGroupModal.hide(); // AJAX 콜백에서 성공 시에만 reload 하므로, 여기서 hide 불필요할 수 있음
                }
	        });
	    });
	});
	</script>
	<%@ include file="../../modules/footerPart.jsp" %>
</body>
</html>