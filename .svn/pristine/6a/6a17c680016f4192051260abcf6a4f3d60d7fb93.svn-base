<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>기안서 작성 (Bootstrap 최적화)</title>
<%@ include file="../../modules/headerPart.jsp" %>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/approval_draft_style.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
<style>
    /* 테마 색상 변수 선언 (최소한으로 유지) */
    :root {
        --theme-purple: #8a2be2; 
        --theme-purple-darker: #6c1bb1; 
        --theme-purple-lighter: #f3eaff;
    }

    /* 커스텀 포커스 스타일 (테마 색상 적용) */
    .form-control.custom-focus:focus,
    .form-select.custom-focus:focus {
        border-color: var(--theme-purple); 
        box-shadow: 0 0 0 0.2rem rgba(138, 43, 226, 0.25); 
    }
   
    /* 커스텀 버튼 스타일 (테마 색상 적용) */
    .btn-purple-theme {
        background-color: var(--theme-purple); 
        color: #fff; 
        border-color: var(--theme-purple); 
       
    }
    .btn-purple-theme:hover {
        background-color: var(--theme-purple-darker); 
        border-color: var(--theme-purple-darker);
        color: #fff;
    }

    .btn-outline-purple-theme {
        color: var(--theme-purple); 
        border-color: var(--theme-purple);
         
    }
    .btn-outline-purple-theme:hover {
        background-color: var(--theme-purple-lighter); 
        color: var(--theme-purple);
        border-color: var(--theme-purple);
    }

    /* 커스텀 테두리 색상 (테마 색상 적용) */
    .border-purple-theme { 
        border-color: var(--theme-purple) !important;
    }
</style>
</head>
<body class="bg-body-secondary">
	<sec:authentication property="principal.employeeVO" var="employeeVO"/>
	<div class="emp-container w-100">
        <%@ include file="../modules/header.jsp" %>
        <div class="emp-body-wrapper w-100">
            <%@ include file="../modules/aside.jsp" %>
			<form id="edmsApprovalForm" action="/emp/edms/form" method="post" class="w-100">
			<sec:csrfInput/>
			<input type="hidden" id="edmsContent" name="edmsContent"/>
			<input type="hidden" name="edmsStatCode" id="edmsStatCode"/>
			<main class="container p-lg-4 p-md-3 p-2 w-100"> 
			    <div class="row">
			        <div class="col-lg-12 mb-12">
			            <h2 class=" text-dark mb-4">기안서 작성</h2> 
			            <div class="card shadow-sm">
			                <div class="card-body p-4"> 
			                    <div class="mb-3">
			                        <label for="formNo" class="form-label fw-semibold text-dark">문서종류</label> 
			                        <select id="formNo" name="formNo" class="form-select custom-focus ">
			                        	<c:forEach items="${formList }" var="formVO" varStatus="vs">
											<option value="${formVO.formNo }" <c:if test="${vs.first }">selected</c:if> >${formVO.formNm }</option>
										</c:forEach>
			                        </select>
						
			                    </div>
			
			                    <div class="p-3 rounded mb-4">
			                        <h5 class="text-dark border-bottom pb-2 mb-3">문서 정보</h5>
			                        <div class="row mb-2 align-items-center">
			                            <label for="draftDept" class="col-lg-2 col-md-3 col-form-label col-form-label-sm fw-semibold text-dark">기안 부서:</label>
			                            <div class="col-lg-10 col-md-9">
			                                <input type="text" class="form-control form-control-sm custom-focus" value="${employeeVO.empDepartNm }" readonly>
			                            </div>
			                        </div>
			                        <div class="row mb-2 align-items-center">
			                            <label for="empUsername" class="col-lg-2 col-md-3 col-form-label col-form-label-sm fw-semibold text-dark">기안자 이름:</label>
			                            <div class="col-lg-10 col-md-9">
			                                <input type="text" class="form-control form-control-sm custom-focus " id="empUsername" name="empUsername" value="${employeeVO.peoName }" readonly>
			                            </div>
			                        </div>
			                        <div class="row align-items-center">
			                            <label for="edmsTitle" class="col-lg-2 col-md-3 col-form-label col-form-label-sm fw-semibold text-dark">기안서 제목:</label>
			                            <div class="col-lg-10 col-md-9">
			                                <input type="text" id="edmsTitle" name="edmsTitle" class="form-control form-control-sm custom-focus ">
			                            </div>
			                        </div>
			                    </div>
			                    
								<div id="content"></div>
					
			                    <div class="row mb-4 align-items-center">
								    <label for="edmsUrgenYn" class="col-lg-2 col-md-3 col-form-label col-form-label-sm fw-semibold text-dark">긴급도:</label>
								    <div class="col-lg-10 col-md-9">
								        <select id="edmsUrgenYn" name="edmsUrgenYn" class="form-select custom-focus w-auto">
								            <option value="N">보통</option>
								            <option value="Y">긴급</option>
								        </select>
								    </div>
								</div>
								
		                        <div class="p-3 rounded mb-4">
								    <h5 class="text-dark border-bottom pb-2 mb-3">결재선 정보</h5>
								    <div class="row mb-2 align-items-center">
								        <label class="col-lg-2 col-md-3 col-form-label col-form-label-sm fw-semibold text-dark">결재자:</label>
								        <div class="col-lg-10 col-md-9 d-flex flex-wrap gap-2" id="approversDisplay">
								            <span class="badge bg-secondary text-white p-2">결재자 이름 1</span>
								            <span class="badge bg-secondary text-white p-2">결재자 이름 2</span>
								        </div>
								    </div>
								    <div class="row align-items-center">
								        <label class="col-lg-2 col-md-3 col-form-label col-form-label-sm fw-semibold text-dark">참조자:</label>
								        <div class="col-lg-10 col-md-9 d-flex flex-wrap gap-2" id="referrersDisplay">
								            <span class="badge bg-info text-dark p-2">참조자 이름 1</span>
								            <span class="badge bg-info text-dark p-2">참조자 이름 2</span>
								        </div>
								    </div>
								</div>
			
			                    <div class="d-flex justify-content-end gap-2 mt-3">
			                        <button type="button" class="btn btn-outline-purple-theme fw-semibold me-auto" id="approverBtn" data-bs-toggle="modal" data-bs-target="#approvalLineModal">결재선 설정</button>
			                        <button type="button" class="btn btn-purple-theme fw-semibold" id="submitBtn">상신하기</button>
			                    </div>
			                </div>
			            </div>
			        </div>
			    </div>
			</main>
			</form>
		</div>
	</div>	
<!-- modal  -->
<div class="modal fade w-100" style="z-index:1050;"id="approvalLineModal" tabindex="-1" aria-labelledby="approvalLineModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl modal-dialog-scrollable">
		<div class="modal-content w-100">
			<div class="modal-header">
				<h5 class="modal-title" id="approvalLineModalLabel">결재선 설정</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="row g-3">
					<div class="col-md-3">
						<div class="card shadow-sm h-100">
							<div class="card-body d-flex flex-column">
								<h6 class="panel-heading border-bottom pb-2 mb-2">부서</h6>
								<div id="modalDepartmentList" class="list-group flex-grow-1" style="overflow-y: auto;">
								</div>
							</div>
						</div>
					</div>
				
					<div class="col-md-5">
						<div class="card shadow-sm h-100">
							<div class="card-body d-flex flex-column">
								<h6 class="panel-heading border-bottom pb-2 mb-2">직원 목록 <small id="modalSelectedDepartmentName" class="text-muted"></small></h6>
								<div id="modalEmployeeList" class="list-group mb-3 flex-grow-1" style="overflow-y: auto;">
									<p class="text-muted p-3 text-center">왼쪽에서 부서를 선택해주세요.</p>
								</div>
								<div class="d-flex justify-content-end gap-2 mt-auto pt-2 border-top">
									<button type="button" class="btn btn-sm btn-primary" id="modalAddApproversBtn">결재 추가</button>
									<button type="button" class="btn btn-sm btn-secondary" id="modalAddReferrersBtn">참조 추가</button>
								</div>
							</div>
						</div>
					</div>
				
					<div class="col-md-4">
						<div class="card shadow-sm mb-3">
							<div class="card-body">
								<h6 class="panel-heading border-bottom pb-2 mb-2">결재라인</h6>
								<div id="modalApprovalLineList" class="list-group list-group-flush" style="min-height: 150px; max-height: 180px; overflow-y: auto;">
								</div>
							</div>
						</div>
						<div class="card shadow-sm">
							<div class="card-body">
								<h6 class="panel-heading border-bottom pb-2 mb-2">참조자</h6>
								<div id="modalReferrerList" class="list-group list-group-flush" style="min-height: 150px; max-height: 180px; overflow-y: auto;">
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
				<button type="button" class="btn btn-primary" id="saveApprovalLineBtn">저장</button>
			</div>
		</div>
	</div>
</div>
            
</body>
<%@ include file="../../modules/footerPart.jsp" %>
<script type="text/javascript">
//사이드바 토글 및 활성화 스크립트 (emp_portal.html과 동일하게)
document.addEventListener('DOMContentLoaded', function() {
    const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
    navItemsWithSubmenu.forEach(item => {
        const arrow = item.querySelector('.submenu-arrow');
        item.addEventListener('click', function(event) {
            event.preventDefault();
            const parentLi = this.parentElement;
            const submenu = this.nextElementSibling;
            if (submenu && submenu.classList.contains('emp-submenu')) {
                const parentUl = parentLi.parentElement;
                if (parentUl) {
                    Array.from(parentUl.children).forEach(siblingLi => {
                        if (siblingLi !== parentLi) {
                            const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                            if (siblingSubmenuControl) {
                                const siblingSubmenu = siblingSubmenuControl.nextElementSibling;
                                siblingSubmenuControl.classList.remove('open');
                                if (siblingSubmenu && siblingSubmenu.classList.contains('emp-submenu')) {
                                    siblingSubmenu.style.display = 'none';
                                }
                                const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                            }
                        }
                    });
                }
            }
            this.classList.toggle('open');
            if (submenu && submenu.classList.contains('emp-submenu')) {
                submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
            }
        });
    });

    // 현재 페이지 URL 기반으로 사이드바 메뉴 활성화
    const currentFullHref = window.location.href;

    document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
        const linkHrefAttribute = link.getAttribute('href');

        if (linkHrefAttribute && linkHrefAttribute !== "#" && currentFullHref.endsWith(linkHrefAttribute)) {
            link.classList.add('active');

            let currentActiveElement = link;

            while (true) {
                const parentLi = currentActiveElement.parentElement;
                if (!parentLi) break;

                const parentSubmenuUl = parentLi.closest('.emp-submenu');

                if (parentSubmenuUl) {
                    parentSubmenuUl.style.display = 'block';

                    const controllingAnchor = parentSubmenuUl.previousElementSibling;

                    if (controllingAnchor && controllingAnchor.tagName === 'A' && controllingAnchor.classList.contains('has-submenu')) {
                        controllingAnchor.classList.add('active', 'open');
                        const arrow = controllingAnchor.querySelector('.submenu-arrow');
                        if (arrow) {
                            arrow.style.transform = 'rotate(90deg)';
                        }
                        currentActiveElement = controllingAnchor;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
        }
    });
});

	$(function(){
		let edmsApprovalForm = $("#edmsApprovalForm");
		let content = $("#content");
		let formNoEl = $("#formNo");
		let submitBtn = $("#submitBtn");
		let approverBtn = $("#approverBtn");
		let approvalLineModal = $("#approvalLineModal");
		
		// 문서 종류에 따른 양식 변경
		formNoEl.on("change",function(){
			let formNo = $(this).val() 
			formDetail(formNo);		
		})
		
		formDetail(formNoEl.val());
		
		// 상신하기 버튼 이벤트
		submitBtn.on("click",function(){
			let edmsContent = $("#edmsContent");
			let edmsStatCode = $("#edmsStatCode");
			
			// 컨텐츠에 value값들 포함시키기
			content.find('input[type="text"], input[type="date"]').each(function() {
	            $(this).attr('value', $(this).val());
	        });
	        content.find('textarea').each(function() {
	            $(this).html( $(this).val() ); // .text() 대신 .html()을 사용하여 HTML 엔티티 문제 방지 가능성
	        });
	        content.find('select').each(function() {
	            let selectedValue = $(this).val();
	            $(this).find('option').each(function() {
	                if ($(this).val() == selectedValue) { // 값으로 비교
	                    $(this).attr('selected', 'selected');
	                } else {
	                    $(this).removeAttr('selected');
	                }
	            });
	        });
	        
			edmsStatCode.val("ESC001");
			// 해당 컨텐츠 내용 첨부하기
 			edmsContent.val(content.html())
			edmsApprovalForm.submit();
		});
		
		// 결재선 관련
		// 결재선 지정 모달
		approverBtn.on("click",function(){
			approvalLineModal.modal();
			displayDepartList();
		})
		
		const modalDepartmentList = $("#modalDepartmentList"); // 부서 목록
		const modalEmployeeList = $("#modalEmployeeList"); // 직원목록
		const modalAddApproversBtn = $("#modalAddApproversBtn"); // 결재 추가 버튼
		const modalAddReferrersBtn = $("#modalAddReferrersBtn"); // 참조 추가 버튼
		const modalApprovalLineList = $("#modalApprovalLineList"); // 결재자 리스트
		const modalReferrerList = $("#modalReferrerList"); // 참조자 리스트
		
		// 부서 목록 클릭시 해당 부서 직원 목록 보이기
		modalDepartmentList.on("click",".list-group-item",function(){
			const empDepartCode = $(this).data("empDepartCode");
			console.log(empDepartCode);
			displayEmpList(empDepartCode)
		})
		
		
		
		// 직원 클릭시 해당 직원 포커스
		modalEmployeeList.on("click",".list-group-item",function(){
			$(".list-group-item",modalEmployeeList).removeClass("list-group-item-select");
			$(this).addClass("list-group-item-select");
			
		})
	
		modalAddApproversBtn.on("click",function(){
			// 결재자리스트 2명까지 선택 가능
			const targetEl = modalEmployeeList.children('ul').children("li.list-group-item-select");
			const targetUsername = targetEl.data("empUsername");
			const targetName = targetEl.text();
			if(modalApprovalLineList.children().length>1){
				sweetAlert("error", "최대 2명까지 선택해주세요");
				return false;
			}
			// 결재자리스트에 해당 직원 있는지 확인
			if(modalApprovalLineList.children("div").children(`span[data-emp-username="\${targetUsername}"]`).length > 0){
				sweetAlert("error","이미 선택된 결재자입니다");
				return false;
			}
			//modalApprovalLineList
			// 없으면 추가
			let html = ``;
			html += `
				<div class="list-group-item list-group-item-active" >
					\${targetName}
					<span class="removeApprovalBtn" data-emp-username="\${targetUsername}">
						<i class="bi bi-x"></i>
					</span>
				</div>
			`;
			modalApprovalLineList.append(html);
		})
		
		// 결재선 관련 끝
		
		// 부서목록 보이기
		function displayDepartList(){
			$.ajax({
				url : "/api/edms/departList",
				type : "get",
				success : function(res){
					console.log(res);
					let html = ``;
					html += `<ul class="list-group">`;
					for(let data of res){
						html += `
							<li class="list-group-item list-group-item-action" data-emp-depart-code="\${data.commCodeDetNo}">\${data.description}</li>
						`
					}
					html += `</ul>`
					modalDepartmentList.html(html);
				}
			});
		}
		
		//해당 부서 클릭시 직원목록 보이기
		function displayEmpList(empDepartCode){
			$.ajax({
				url : "/api/edms/empList?empDepartCode="+empDepartCode,
				type : "get",
				success : function(res){
					console.log(res);
					let html = ``;
					html += `<ul class="list-group">`;
					for(let data of res){
						const {empPositionNm, empUsername,peoName} = data;
						html += `
							<li class="list-group-item list-group-item-action" data-emp-username="\${empUsername}">\${peoName}(\${empPositionNm})</li>
						`
					}
					html += `</ul>`
					modalEmployeeList.html(html);
				}
			});
		}
		
		// 해당 폼 클릭시 폼정보 불러오기
		function formDetail(formNo){
			let data = {
					formNo : formNo
			};
			$.ajax({
				url : "/api/edms/form",
				type : "post",
				beforeSend : function(xhr) {
			        xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			    },
			    contentType : "application/json; charset=utf-8",
			    data : JSON.stringify(data),
			    success : function(res){
			    	console.log(res);
			    	$("#content").html(res.formContent);
			    },
			    error : function(err){
			    	console.err(err);
			    }
			});
		}
	});
</script>
</html>