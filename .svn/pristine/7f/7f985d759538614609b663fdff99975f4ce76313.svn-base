package kr.or.ddit.ddtown.mapper.emp.artist;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import kr.or.ddit.vo.artist.AlbumVO;
import kr.or.ddit.vo.artist.ArtistGroupVO;

@Mapper
public interface ArtistGroupMapper {

    // 목록 불러오기
    public List<ArtistGroupVO> retrieveArtistGroupList(); // OK

    // 그룹의 상세 정보 불러오기
    public ArtistGroupVO retrieveArtistGroup(int artGroupNo); // OK (서비스단의 TODO였던 부분과 연결)
    
    // 추가된 getAllAlbums 메소드 선언
    public List<AlbumVO> getAllAlbums();

    public List<AlbumVO> getGroupAlbum(@Param("artGroupNoParam") int artGroupNo);
    
    // 그룹 기본 정보 업데이트
    public int updateArtistGroup(ArtistGroupVO groupToUpdate); // OK

    // 특정 그룹에 속한 모든 아티스트들의 art_group_no를 NULL로 설정 (연결 해제)
    public int unassignArtistsFromGroup(int artGroupNo); // OK (서비스단에서 artGroupNoValue로 @Param을 가정했으나, 파라미터가 하나일 경우 보통 생략 가능)

    // 주어진 아티스트 ID 리스트에 대해 art_group_no를 특정 그룹 번호로 설정 (그룹에 배정)
    public int assignArtistsToGroup(@Param("artGroupNo") int artGroupNo, @Param("artistIds") List<Integer> newMemberArtNoList); // OK, @Param 사용 좋음

    // 특정 그룹에 연결된 모든 앨범들의 ART_GROUP_NO를 NULL로 설정
    public int unassignAlbumsFromGroup(int artGroupNo); // OK (서비스단에서 artGroupNoValue로 @Param을 가정했으나, 파라미터가 하나일 경우 보통 생략 가능)

    // 주어진 앨범 ID 리스트에 대해 ART_GROUP_NO를 특정 그룹 번호로 설정 (그룹에 배정)
    public int assignAlbumsToGroup(@Param("artGroupNo") int artGroupNo, @Param("albumIds") List<Integer> newAlbumIdList); // 제안: @Param("albumIds") 추가, 서비스 코드의 파라미터 변수명(newAlbumIdList)과 XML에서 사용할 이름(albumIds)을 명확히 함

}