<%-- /WEB-INF/views/mypage/alert/alertSettingFormContent.jsp --%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c" %>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>
<%@ taglib uri="jakarta.tags.functions" prefix="fn" %>

<section id="alert-settings-content" class="mypage-section active-section">
    <div class="mypage-section-header">
        <h3>${pageTitle}</h3>
    </div>

    <%-- 서버 메시지 표시부 --%>
    <div id="alertSettingServerMessage" class="server-message"></div>
    <c:if test="${not empty alertSettingErrorMessage}"><div class="server-message error" style="display:block;">${alertSettingErrorMessage}</div></c:if>
    <c:if test="${not empty alertSettingSuccessMessage}"><div class="server-message success" style="display:block;">${alertSettingSuccessMessage}</div></c:if>

    <form id="alert-setting-form">
        <p class="form-hint-mypage" style="margin-bottom: 20px;">수신을 원하는 알림 유형을 선택해주세요.</p>
        <c:choose>
            <c:when test="${not empty alertSettings && fn:length(alertSettings) > 0}">
                <c:forEach var="setting" items="${alertSettings}" varStatus="status">
                    <div class="form-group-mypage alert-setting-item">
                        <input type="hidden" name="settings[${status.index}].alertTypeCode" value="${setting.alertTypeCode}">
                        <input type="hidden" name="settings[${status.index}].memUsername" value="${setting.memUsername}"> 
                        
                        <label for="enable_${setting.alertTypeCode}">${setting.alertDescription}</label>
                        <div class="radio-group-mypage">
                            <label>
                                <input type="radio" name="settings[${status.index}].alertEnabledYn" id="enable_Y_${setting.alertTypeCode}" value="Y" 
                                       ${setting.alertEnabledYn eq 'Y' ? 'checked' : ''}> 수신함
                            </label>
                            <label>
                                <input type="radio" name="settings[${status.index}].alertEnabledYn" id="enable_N_${setting.alertTypeCode}" value="N" 
                                       ${setting.alertEnabledYn eq 'N' || empty setting.alertEnabledYn ? 'checked' : ''}> 수신안함
                            </label>
                        </div>
                    </div>
                </c:forEach>
            </c:when>
            <c:otherwise>
                <p class="no-alerts" style="padding: 20px; text-align: center; color: #777;">설정할 알림 유형이 없습니다.</p>
            </c:otherwise>
        </c:choose>

        <div class="form-actions-mypage" style="margin-top: 30px;">
            <button type="submit" id="btn-save-alert-settings" class="btn-mypage-primary">설정 저장</button>
        </div>
    </form>
</section>

<script>
$(function(){
    const alertSettingForm = $('#alert-setting-form');
    const csrfToken = $("meta[name='_csrf']").attr("content");
    const csrfHeader = $("meta[name='_csrf_header']").attr("content");

    function displayAlertSettingServerMessage(message, isSuccess) {
        $('#alertSettingServerMessage').text(message || '처리 중 오류가 발생했습니다.')
                           .removeClass('success error')
                           .addClass(isSuccess ? 'success' : 'error')
                           .show();
        setTimeout(() => $('#alertSettingServerMessage').fadeOut(), 5000);
    }

    alertSettingForm.on('submit', function(event) {
        event.preventDefault();

        const settingsData = [];
        // 폼 데이터 구성
        $(this).find('.alert-setting-item').each(function(index) {
            const typeCode = $(this).find('input[name^="settings["][name$="].alertTypeCode"]').val();
            const enabledYn = $(this).find('input[name^="settings["][name$="].alertEnabledYn"]:checked').val();
            
            // 알림 설정 저장 (타입, 온오프)
            settingsData.push({
                alertTypeCode: typeCode,
                alertEnabledYn: enabledYn
                
            });
        });

        console.log("저장할 알림 설정 데이터:", settingsData);
        if (settingsData.length === 0) {
            displayAlertSettingServerMessage('저장할 설정 항목이 없습니다.', false);
            return;
        }
        
        let headers = {'Content-Type': 'application/json'}; 
        headers[csrfHeader] = csrfToken;
        const saveButton = $('#btn-save-alert-settings');

        $.ajax({
            url: '<c:url value="/mypage/alerts/setting/save"/>', 
            type: 'POST',
            contentType: 'application/json', // @RequestBody
            data: JSON.stringify(settingsData),
            headers: headers,
            beforeSend: () => saveButton.addClass('loading').prop('disabled', true),
            complete: () => saveButton.removeClass('loading').prop('disabled', false),
            success: function(response) {
                displayAlertSettingServerMessage(response.message || '알림 설정이 저장되었습니다.', response.success);
                if (response.success) {
                    // 페이지이동 넣어야함
                }
            },
            error: function(xhr) {
                displayAlertSettingServerMessage('알림 설정 저장 중 오류: ' + (xhr.responseJSON ? xhr.responseJSON.message : '서버 오류'), false);
            }
        });
    });
});
</script>