package kr.or.ddit.ddtown.controller.chat.dm;

import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.handler.annotation.SendTo;
import org.springframework.messaging.simp.SimpMessageSendingOperations;
import org.springframework.stereotype.Controller;

import kr.or.ddit.vo.chat.dm.ChatMessageVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Controller
public class DMChatController {
	
	private final SimpMessageSendingOperations messagingTemplate;
	
//	@PostMapping
//	public ChatRoom createRoom(@RequestParam String name) {
//		return chatService.createRoom(name);
//	}
//	
//	@GetMapping
//	public List<ChatRoom> findAllRoom() {
//		return chatService.findAllRoom();
//	}
	
	@MessageMapping("/chat/dm/message")
	public void message(ChatMessageVO message) {
		if(ChatMessageVO.MessageType.ENTER.equals(message.getType())) {
			message.setChatContent(message.getUsername() + "님이 입장하셨습니다.");
		} else if(ChatMessageVO.MessageType.EXIT.equals(message.getType())) {
			message.setChatContent(message.getUsername() + "님이 퇴장하셨습니다.");
		}
		// 해당 채팅방을 구독하는 모든 클라이언트에게 메세지 전송
		messagingTemplate.convertAndSend("/sub/chat/dm/room/" + message.getChatChannelNo(), message);
	}

}
