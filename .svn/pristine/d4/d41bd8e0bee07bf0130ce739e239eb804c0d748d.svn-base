package kr.or.ddit.ddtown.service.emp.artist;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.ddit.ddtown.mapper.emp.artist.IArtistMapper;
import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.artist.ArtistVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class ArtistServiceImpl implements IArtistService{

	@Autowired
	private IArtistMapper artistMapper;

	@Override
	public List<ArtistVO> getAllArtists() {
		log.info("getAllArtists() 메소드 실행");
		
		List<ArtistVO> allArtist = artistMapper.getAllArtists();
		
		if (allArtist == null || allArtist.isEmpty()) {
            log.info("조회된 아티스트가 없습니다.");
        } else {
            log.info("조회된 아티스트 그룹 수: {}", allArtist.size());
        }

        return allArtist;
	}

	@Override
	public List<ArtistVO> getArtistList(Map<String, String> searchParams) {
		log.info("getArtistList() 메소드 실행");
		
		List<ArtistVO> artistList = artistMapper.getArtistList();
		
		if (artistList == null || artistList.isEmpty()) {
            log.info("조회된 아티스트가 없습니다.");
        } else {
            log.info("조회된 아티스트 수: {}", artistList.size());
        }
        return artistList;
	}
	@Transactional
	@Override
	public int updateArtist(ArtistVO artistToUpdate) {
		log.info("updateArtist() 실행. 대상 그룹 : {}", artistToUpdate.getArtNo());
		
		int artistUpdateCount = artistMapper.updateArtist(artistToUpdate);
		if(artistUpdateCount == 0) {
			log.warn("아티스트 기본 정보 업데이트 실패 또는 변경된 내용 없음: 그룹번호 {}", artistToUpdate.getArtNo());
			return 0;
		}
		log.info("아티스트 기본 정보 업데이트 성공: {}개 행 업데이트", artistUpdateCount);
		return 1; // 성공
	}

	@Override
	public List<ArtistVO> artistListWithPage(PaginationInfoVO<ArtistVO> pagingVO) {
		log.info("artistListWithPage() 실행");
		return artistMapper.artistListWithPage(pagingVO);
	}

	@Override
	public int selectArtistCount(PaginationInfoVO<ArtistVO> pagingVO) {
		log.info("selectArtistCount() 실행");
		return artistMapper.selectArtistCount(pagingVO);
	}
}
