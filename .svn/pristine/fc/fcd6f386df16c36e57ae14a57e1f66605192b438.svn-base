<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>그룹 관리 - DDTOWN 직원 포털</title>
    
    <%-- 기존 포털 공통 CSS --%>
    <link rel="stylesheet" href="<%=request.getContextPath()%>/resources/css/pages/emp_common.css">
    <link rel="stylesheet" href="<%=request.getContextPath()%>/resources/css/pages/emp_portal_style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        main.emp-content { /* width: 90%; margin: 20px auto; /* emp_common.css 와 충돌 가능성. 여기서는 유지 */ }
        .artist-search-box { margin-bottom: 20px; display: flex; gap: 10px; }
        .artist-search-box input[type="text"] { padding: 8px; border: 1px solid #ddd; border-radius: 4px; flex-grow: 1; }
        .artist-search-box button { padding: 8px 15px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }
        .artist-search-box button:hover { background-color: #0056b3; }
        table.artist-table { width: 100%; border-collapse: collapse; margin: 20px 0; table-layout: fixed; } /* group-table과 유사하나 클래스명 다름 */
        table.artist-table th, table.artist-table td { border: 1px solid #ddd; padding: 10px; text-align: left; vertical-align: middle; word-wrap: break-word; }
        table.artist-table th { background-color: #f2f2f2; font-weight: bold; }
        th.col-profile-path, td.col-profile-path { width: 30%; }
        th.col-actions, td.col-actions { width: 10%; }

        .action-button { padding: 6px 12px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 0.9em; }
        .action-button:hover { background-color: #218838; }
        .modal-actions { text-align: right; margin-top: 20px; }

        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0, 0, 0, 0.4); }
        .modal-content { background-color: #fefefe; margin: 10% auto; padding: 25px; border: 1px solid #888; width: 60%; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); border-radius: 5px; }
        .close-button { color: #aaa; float: right; font-size: 28px; font-weight: bold; }
        .close-button:hover, .close-button:focus { color: black; text-decoration: none; cursor: pointer; }
        .modal-content hr { margin-top: 5px; margin-bottom: 15px; }
        .modal-content div.form-group { margin-bottom: 15px; }
        .modal-content input[type="text"],
        .modal-content input[type="date"], /* 데뷔일 타입 변경 고려 */
        .modal-content input[type="file"], 
        .modal-content textarea { width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 3px; margin-top: 4px; box-sizing: border-box; }
        .modal-content input[readonly] { background-color: #e9ecef; }
        .modal-content textarea { resize: vertical; }
        .form-group label { display: block; margin-bottom: 3px; font-weight: bold; }
        small { font-size: 0.85em; color: #6c757d; }
        /* 멤버 태그 스타일 추가 */
        .member-tag { display: inline-block; background-color: #e0e0e0; color: #333; padding: 5px 8px; margin-right: 5px; margin-bottom: 5px; border-radius: 3px; font-size: 0.9em; }
        .remove-member-btn { margin-left: 5px; color: #888; background: none; border: none; cursor: pointer; font-weight: bold; }
        .remove-member-btn:hover { color: #333; }
    </style>
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="emp-container">
        <header class="emp-header">
            <div class="emp-logo">
                <a href="<%=request.getContextPath()%>/emp_portal.jsp">DDTOWN 직원 포털</a>
            </div>
            <div class="emp-user-info">
                <span><i class="fas fa-user-circle"></i> 안녕하세요, <strong id="employee-name">홍길동</strong>님</span>
                <a href="#logout" class="emp-logout-btn"><i class="fas fa-sign-out-alt"></i> 로그아웃</a>
            </div>
        </header>
        <div class="emp-body-wrapper">
            <aside class="emp-sidebar">
                <nav class="emp-nav">
                    <ul>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="approval">
                                <i class="fas fa-file-signature"></i> 전자결재 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-approval">
                                <li><a href="<%=request.getContextPath()%>/1.approval/approval_draft.jsp" class="emp-nav-item">기안서 작성</a></li>
                                <li><a href="<%=request.getContextPath()%>/1.approval/approval_request_list.jsp" class="emp-nav-item">결재 요청 리스트</a></li>
                                <li><a href="<%=request.getContextPath()%>/1.approval/approval_box.jsp" class="emp-nav-item">결재 문서함</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="audition">
                                <i class="fas fa-microphone-alt"></i> 오디션 관리 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-audition">
                                <li><a href="<%=request.getContextPath()%>/2.audition/schedule_management.jsp" class="emp-nav-item">일정 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/2.audition/applicant_info.jsp" class="emp-nav-item">지원자 정보</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="community">
                                <i class="fas fa-users"></i> 아티스트 커뮤니티 관리 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-community">
                                <li>
                                    <a href="#" class="emp-nav-item has-submenu" data-menu="artist-mgmt">아티스트 관리 <span class="submenu-arrow">&gt;</span></a>
                                    <ul class="emp-submenu" id="submenu-artist-mgmt">
                                        <li><a href="<%=request.getContextPath()%>/emp/group/group-management" class="emp-nav-item">그룹 관리</a></li>
                                        <li><a href="<%=request.getContextPath()%>/emp/artist/individual-management" class="emp-nav-item">아티스트 관리</a></li>
                                    </ul>
                                </li>
                                <%-- 다른 커뮤니티 관련 링크들도 실제 경로에 맞게 수정 --%>
                                <li><a href="<%=request.getContextPath()%>/community/notice_management.jsp" class="emp-nav-item">공지사항 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/post_management.jsp" class="emp-nav-item">게시물 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/live_management.jsp" class="emp-nav-item">라이브 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/schedule_management.jsp" class="emp-nav-item">일정 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/membership_management.jsp" class="emp-nav-item">멤버십 관리</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="concert">
                                <i class="fas fa-ticket-alt"></i> 콘서트 관리 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-concert">
                                <li><a href="<%=request.getContextPath()%>/4.concert/schedule_management.jsp" class="emp-nav-item">콘서트 일정 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/4.concert/notice_management.jsp" class="emp-nav-item">콘서트 공지사항 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/4.concert/seat_management.jsp" class="emp-nav-item">콘서트 좌석 관리</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="<%=request.getContextPath()%>/email_tool.jsp" class="emp-nav-item" data-menu="email">
                                <i class="fas fa-envelope-open-text"></i> 이메일 전송
                            </a>
                        </li>
                    </ul>
                </nav>
            </aside>
            
            <%-- 메인 컨텐츠 영역 시작 (사용자 제공 코드로 교체) --%>
            <main class="emp-content">
                <h1>그룹 목록</h1>
            
                <c:if test="${not empty artistGroupList}">
                    <table class="artist-table"> <%-- 클래스명 변경됨 --%>
                        <thead>
                            <tr>
                                <th>그룹 번호</th>
                                <th class="col-profile-path">프로필 이미지 경로</th>
                                <th>그룹명</th>
                                <th>데뷔일자</th>
                                <th>최근 수정일</th>
                                <th class="col-actions">관리</th>
                            </tr>
                        </thead>
                        <tbody>
                            <c:forEach items="${artistGroupList}" var="group">
                                <tr>
                                    <td>${group.artGroupNo}</td>
                                    <td>${group.artGroupProfileImg}</td>
                                    <td><c:out value="${group.artGroupNm}" /></td>
                                    <td>${group.artGroupDebutdate}</td>
                                    <td><fmt:formatDate value="${group.artGroupModDate}" pattern="yyyy-MM-dd HH:mm:ss" /></td>
                                    <td>
                                        <c:set var="initialMembersJsonString" value="[]" />
                                        <c:if test="${not empty group.artistVOs}">
                                            <c:set var="jsonBuilder">
                                                <c:forEach items="${group.artistVOs}" var="artist" varStatus="loopStatus">
                                                    {"artNo": "${artist.artNo}", "artNm": "<c:out value='${artist.artNm}' escapeXml='true' />"}${!loopStatus.last ? ',' : ''}
                                                </c:forEach>
                                            </c:set>
                                            <c:set var="initialMembersJsonString" value="[${jsonBuilder}]" />
                                        </c:if>
                                        <button class="action-button edit-group-btn"
                                            data-group-no="${group.artGroupNo}"
                                            data-group-nm="<c:out value='${group.artGroupNm}'/>"
                                            data-group-debutdate="${group.artGroupDebutdate}"
                                            data-group-typecode="${group.artGroupTypeCode}"
                                            data-group-initial-members='${initialMembersJsonString}'
                                            data-group-content="<c:out value='${group.artGroupContent}'/>"
                                            data-group-profileimg="${group.artGroupProfileImg}">수정</button>
                                    </td>
                                </tr>
                            </c:forEach>
                        </tbody>
                    </table>
                </c:if>
                <c:if test="${empty artistGroupList}">
                    <p style="text-align: center;">등록된 그룹이 없습니다.</p>
                </c:if>
            </main>
        </div>
    </div> 

    <%-- 수정 모달 (emp-container 바깥 또는 body 직계 자식으로 이동) --%>
    <div id="editGroupModal" class="modal">
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h2>그룹 정보 수정</h2>
            <hr>
            <form id="editGroupForm">
                <input type="hidden" id="modalGroupNo" name="artGroupNo">
                <div class="form-group">
                    <label for="modalGroupName">그룹명:</label>
                    <input type="text" id="modalGroupName" name="artGroupNm" class="form-control">
                </div>
                <div class="form-group">
                    <label for="modalDebutDate">데뷔일:</label>
                    <input type="text" id="modalDebutDate" name="artGroupDebutdate" class="form-control">
                </div>
                <div class="form-group">
                    <fieldset>
                        <legend style="font-weight: bold; padding: 0; margin-bottom: 5px; border: 0; display: block; width:auto;">활동유형:</legend>
                        <div class="radio-options-wrapper" style="display: block; margin-left: 0px; margin-top: 5px;">
                            <label class="radio-label" for="artGroupTypeGroup" style="margin-right: 15px; cursor:pointer; font-weight:normal;">
                                <input type="radio" name="artGroupTypeCode" value="AGTC001" id="artGroupTypeGroup"> 그룹
                            </label>
                            <label class="radio-label" for="artGroupTypeSolo" style="cursor:pointer; font-weight:normal;">
                                <input type="radio" name="artGroupTypeCode" value="AGTC002" id="artGroupTypeSolo"> 솔로
                            </label>
                        </div>
                    </fieldset>
                </div>
                <div class="form-group">
                    <fieldset>
                        <legend class="form-label" style="font-weight: bold; padding: 0; margin-bottom: 10px; border: 0; display: block; width: auto;">소속멤버</legend>
                        <div id="selectedMembersContainer" class="members-container" style="margin-bottom: 10px; min-height: 40px; border: 1px solid #ddd; padding: 8px; border-radius: 4px;">
                        </div>
                        <div class="input-group-for-member-add" style="display: flex; gap: 8px; align-items: center; margin-bottom: 10px;">
                            <select id="artistSelect" class="form-control" style="flex-grow: 1;">
                                <option value="">-- 아티스트 선택 --</option>
                                <c:forEach items="${allArtists}" var="artist">
                                    <option value="${artist.artNo}"><c:out value="${artist.artNm}"/></option>
                                </c:forEach>
                            </select>
                            <button type="button" id="addMemberBtn" class="action-button" style="white-space: nowrap;">멤버 추가</button>
                        </div>
                        <input type="hidden" id="memberArtNosInput" name="memberArtNos" />
                    </fieldset>
                </div>
                <div class="form-group">
                    <label for="modalGroupContent">소개글:</label>
                    <textarea id="modalGroupContent" name="artGroupContent" rows="4" class="form-control"></textarea>
                </div>
                <div class="form-group">
                    <label for="modalGroupProfileFileSelect">프로필 이미지 파일 선택:</label>
                    <input type="file" id="modalGroupProfileFileSelect" accept="image/*" class="form-control-file">
                    <small>파일을 선택하면 아래 경로가 자동으로 완성됩니다. (실제 업로드 기능은 별도 구현 필요)</small>
                </div>
                <div class="form-group">
                    <label for="modalGroupProfileImgPath">서버 저장 경로 (또는 파일명):</label>
                    <input type="text" id="modalGroupProfileImgPath" name="artGroupProfileImg" readonly placeholder="파일 선택 시 자동 완성됩니다." class="form-control">
                     <small>예: /uploads/profile/group/이미지파일명.jpg (실제 경로는 서버 설정에 따름)</small>
                </div>
                
                <div class="modal-actions">
                    <button type="button" class="action-button" id="saveGroupChangesBtn">저장</button>
                </div>
            </form>
        </div>
    </div>

    <%-- 
        컨트롤러의 View Resolver 설정에 따라 경로를 정확히 지정해야 합니다.
        예: prefix="/WEB-INF/views/", suffix=".jsp"
        "emp/group/group-management" -> /WEB-INF/views/emp/group/group-management.jsp
        따라서 ../../modules/footerPart.jsp 는 /WEB-INF/views/modules/footerPart.jsp 를 가리킵니다.
        이 파일이 해당 위치에 존재해야 합니다.
    --%>
    <%@ include file="../../modules/footerPart.jsp" %>

    <script>
        // 기존 포털 레이아웃 관련 JavaScript
        const logoutButton = document.querySelector('.emp-logout-btn');
        if (logoutButton) {
            logoutButton.addEventListener('click', function(e) {
                e.preventDefault();
                if (confirm('로그아웃 하시겠습니까?')) {
                    alert('로그아웃 되었습니다.');
                    // 실제 로그아웃 처리 페이지로 이동
                    // window.location.href = '<%=request.getContextPath()%>/user_side/login/emp_login.jsp'; 
                }
            });
        }

        const employeeNameSpan = document.getElementById('employee-name');
        if (employeeNameSpan) {
            // 실제로는 세션 등에서 직원 정보를 가져와야 합니다.
            // 예: employeeNameSpan.textContent = "<c:out value='${sessionScope.employeeName}' default='홍길동'/>";
            employeeNameSpan.textContent = "홍길동"; // 임시
        }

        document.addEventListener('DOMContentLoaded', function() {
            const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
            navItemsWithSubmenu.forEach(item => {
                const arrow = item.querySelector('.submenu-arrow');
                item.addEventListener('click', function(event) {
                    if (this.getAttribute('href') === '#') {
                        event.preventDefault();
                    }
                    const parentLi = this.parentElement;
                    const submenu = this.nextElementSibling;

                    if (submenu && submenu.classList.contains('emp-submenu')) {
                        const parentUl = parentLi.parentElement;
                        if (parentUl) {
                            Array.from(parentUl.children).forEach(siblingLi => {
                                if (siblingLi !== parentLi) {
                                    const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                                    if (siblingSubmenuControl) {
                                        const siblingSubmenuElement = siblingSubmenuControl.nextElementSibling;
                                        siblingSubmenuControl.classList.remove('open');
                                        if (siblingSubmenuElement && siblingSubmenuElement.classList.contains('emp-submenu')) {
                                            siblingSubmenuElement.style.display = 'none';
                                        }
                                        const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                        if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                                    }
                                }
                            });
                        }
                    }
                    
                    this.classList.toggle('open');
                    if (submenu && submenu.classList.contains('emp-submenu')) {
                        submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                        if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
                    }
                });
            });

            // 현재 페이지 URL 기반으로 사이드바 메뉴 활성화
            const currentFullHref = window.location.href;
            document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
                if (link.href === currentFullHref) { // 완전 일치하는 경우
                    link.classList.add('active');
                    let currentActiveElement = link;
                    while (true) {
                        const parentLi = currentActiveElement.parentElement;
                        if (!parentLi) break;
                        const parentSubmenuUl = parentLi.closest('ul.emp-submenu');
                        if (parentSubmenuUl) {
                            parentSubmenuUl.style.display = 'block';
                            const controllingAnchor = parentSubmenuUl.previousElementSibling;
                            if (controllingAnchor && controllingAnchor.classList.contains('has-submenu')) {
                                controllingAnchor.classList.add('active', 'open');
                                const arrow = controllingAnchor.querySelector('.submenu-arrow');
                                if (arrow) arrow.style.transform = 'rotate(90deg)';
                                currentActiveElement = controllingAnchor;
                            } else break;
                        } else break;
                    }
                }
            });
        });

        // 사용자 제공 JavaScript (그룹 수정, AJAX 등)
        $(function() { 
            const $editGroupModal = $('#editGroupModal');
            const $closeButton = $editGroupModal.find('.close-button');
            // const $editGroupForm = $('#editGroupForm'); // 필요시 사용

            const $modalGroupNo = $('#modalGroupNo');
            const $modalGroupName = $('#modalGroupName');
            const $modalDebutDate = $('#modalDebutDate');
            const $modalGroupContent = $('#modalGroupContent');
            const $modalGroupProfileFileSelect = $('#modalGroupProfileFileSelect');
            const $modalGroupProfileImgPath = $('#modalGroupProfileImgPath');

            // 그룹 프로필 이미지 기본 경로 (실제 웹 경로로 변경해야 함)
            // 예: const groupServerWebBasePath = "${pageContext.request.contextPath}/uploads/profile/group/";
            const groupLocalHardcodedBasePath = "/upload/profile/group/"; // 로컬 경로 예시 (실제로는 웹 경로 사용)

            const $selectedMembersContainer = $('#selectedMembersContainer');
            const $artistSelect = $('#artistSelect');
            const $addMemberBtn = $('#addMemberBtn');
            const $memberArtNosInput = $('#memberArtNosInput');

            let currentMemberArtNos = [];

            function renderMemberTag(artNo, artNm) {
                const artNoStr = String(artNo);
                if (currentMemberArtNos.includes(artNoStr)) {
                    alert("이미 추가된 멤버입니다.");
                    return;
                }
                const $tag = $('<span></span>').addClass('member-tag').text(artNm).data('artNo', artNoStr);
                const $removeBtn = $('<button></button>').addClass('remove-member-btn').html('&times;').attr('type', 'button');
                $removeBtn.on('click', function() {
                    $tag.remove();
                    currentMemberArtNos = currentMemberArtNos.filter(id => id !== artNoStr);
                    updateMemberArtNosInput();
                });
                $tag.append($removeBtn).appendTo($selectedMembersContainer);
                currentMemberArtNos.push(artNoStr);
                updateMemberArtNosInput();
            }

            function updateMemberArtNosInput() {
                $memberArtNosInput.val(currentMemberArtNos.join(','));
            }

            $addMemberBtn.on('click', function() {
                const $selectedOption = $artistSelect.find('option:selected');
                if ($selectedOption.length && $selectedOption.val()) {
                    renderMemberTag($selectedOption.val(), $selectedOption.text());
                    $artistSelect.val(""); 
                } else {
                    alert("아티스트를 선택해주세요.");
                }
            });

            $('.edit-group-btn').on('click', function () {
                const $this = $(this);
                $modalGroupNo.val($this.data('groupNo') || '');
                $modalGroupName.val($this.data('groupNm') || '');
                $modalDebutDate.val($this.data('groupDebutdate') || ''); // 'YYYY-MM-DD' 형식이어야 <input type="date">에 맞음
                $modalGroupContent.val($this.data('groupContent') || '');
                $modalGroupProfileImgPath.val($this.data('groupProfileimg') || '');
                $modalGroupProfileFileSelect.val('');

                const typeCode = $this.data('groupTypecode');
                $('input[name="artGroupTypeCode"]').prop('checked', false);
                if (typeCode === 'AGTC001') $('#artGroupTypeGroup').prop('checked', true);
                else if (typeCode === 'AGTC002') $('#artGroupTypeSolo').prop('checked', true);

                $selectedMembersContainer.empty();
                currentMemberArtNos = [];
                const initialMembersJson = $this.data('groupInitialMembers');
                if (initialMembersJson && (typeof initialMembersJson === 'string' || Array.isArray(initialMembersJson))) {
                    let initialMembers = (typeof initialMembersJson === 'string') ? JSON.parse(initialMembersJson) : initialMembersJson;
                    if (Array.isArray(initialMembers)) {
                        initialMembers.forEach(member => {
                            if(member && typeof member.artNo !== 'undefined' && typeof member.artNm !== 'undefined') {
                                renderMemberTag(member.artNo, member.artNm);
                            }
                        });
                    }
                }
                updateMemberArtNosInput();
                $editGroupModal.css('display', 'block');
            });

            $modalGroupProfileFileSelect.on('change', function(event) {
                const files = event.target.files;
                if (files && files.length > 0) {
                    const fileName = files[0].name;
                    const fullServerPath = groupLocalHardcodedBasePath + fileName; // 개발/테스트용 로컬 경로
                    $modalGroupProfileImgPath.val(fullServerPath); 
                } else {
                    $modalGroupProfileImgPath.val(''); 
                }
            });

            $closeButton.on('click', function () { $editGroupModal.css('display', 'none'); });
            $(window).on('click', function (event) {
                if ($(event.target).is($editGroupModal)) { $editGroupModal.css('display', 'none');}
            });

            $('#saveGroupChangesBtn').on('click', function() {
                // 데뷔일 날짜 형식이 YYYY-MM-DD인지 확인 (input type="date" 사용 시 브라우저가 처리)
                const groupData = {
                    artGroupNo: $modalGroupNo.val(),
                    artGroupNm: $modalGroupName.val(),
                    artGroupDebutdate: $modalDebutDate.val(), // <input type="date"> 에서 YYYY-MM-DD 형식으로 값을 가져옴
                    artGroupTypeCode: $('input[name="artGroupTypeCode"]:checked').val(),
                    artGroupContent: $modalGroupContent.val(),
                    artGroupProfileImg: $modalGroupProfileImgPath.val(),
                    memberArtNos: $memberArtNosInput.val()
                };

                console.log("저장할 그룹 데이터:", JSON.stringify(groupData));

                $.ajax({
                    url: '${pageContext.request.contextPath}/emp/group/update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(groupData), 
                    beforeSend : function(xhr) {
                        // Spring Security CSRF 토큰 헤더 추가
                        xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
                    },
                    success: function(response) {
                        // 컨트롤러 응답: { "status": "success/error", "message": "메시지" }
                        if(response && response.status === "success") { // 조건문 수정
                            alert(response.message || '그룹 정보가 성공적으로 저장되었습니다.');
                            location.reload(); 
                        } else {
                            alert(response.message || '그룹 정보 저장 중 문제가 발생했습니다.');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("저장 실패:", xhr.status, error, xhr.responseText);
                        let errorMsg = '그룹 정보 저장에 실패했습니다.';
                        if(xhr.responseJSON && xhr.responseJSON.message) {
                            errorMsg += '\n오류: ' + xhr.responseJSON.message;
                        } else {
                            try {
                                const responseObj = JSON.parse(xhr.responseText);
                                if(responseObj && responseObj.message) {
                                     errorMsg += '\n오류: ' + responseObj.message;
                                } else { errorMsg += '\n서버 응답 일부: ' + xhr.responseText.substring(0, 200); }
                            } catch(e) { errorMsg += '\n서버 응답 일부: ' + xhr.responseText.substring(0, 200); }
                        }
                        alert(errorMsg);
                    }
                });
            });
        });
    </script>
</body>
</html>