<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/emp_common.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script type="text/javascript" src="${pageContext.request.contextPath}/resources/ckeditorInquiry/ckeditor.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/js/adminlte.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.17/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" >
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<style type="text/css">
.calendar-header-bar { display: flex; align-items: center; justify-content: space-between; margin-bottom: 12px; }
.calendar-header-bar .calendar-title { font-size: 1.5em; font-weight: 700; color: #234aad; }
.calendar-header-bar .calendar-add-btn { background: #1976d2; color: #fff; border: none; border-radius: 5px; padding: 8px 22px; font-size: 1em; font-weight: 500; cursor: pointer; transition: background 0.2s; }
.calendar-header-bar .calendar-add-btn:hover { background: #1451a3; }
.calendar-info-box { background: #e3f0ff; color: #234aad; border-radius: 6px; padding: 12px 18px; margin-bottom: 18px; font-size: 1em; display: flex; align-items: center; gap: 8px; }

#tooltip {
  position: absolute;
  background-color: #333;
  color: white;
  padding: 8px 12px;
  border-radius: 4px;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s, visibility 0.2s;
  white-space: nowrap;
  pointer-events: none; /* 중요: 툴팁이 마우스 이벤트를 방해하지 않도록 */
}

#tooltip .tooltip-text {
  display: block;
  margin-bottom: 3px;
}
#tooltip .tooltip-text:last-child {
  margin-bottom: 0;
}

.mb-3 .form-control {
    resize: none;
}

.mb-3 .form-control:disabled .form-control-color{
	background-color : #ffffff;
}

</style>
</head>

<body>
<main class="emp-content" style="position:relative; min-height:600px;">
	<div class="calendar-header-bar">
        <div class="calendar-title">아티스트 일정 관리</div>
        <button class="calendar-add-btn" id="addScheduleBtn"><i class="fas fa-calendar-plus"></i> 새 일정 등록</button>
    </div>
    <div id="calendar"></div>
</main>




<div class="tooltip-container" id="tooltip" style="visibility:hidden">
	<span class="tooltip-text" id="toolContent"></span>
	<span class="tooltip-text" id="toolPlace"></span>
</div>

<!-- 등록 모달 -->
<div class="modal fade" id="scheduleAddModal" tabindex="-1" aria-labelledby="scheduleAddModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="scheduleAddModalLabel"></h5>
				<button type="button" class="btn-close" aria-label="Close" id="addCloseBtn"></button>
			</div>
			<div class="modal-body">
	        	<div class="mb-3">
	        		 <label for="addTitle" class="form-label">일정명</label>
	        		 <input type="text" class="form-control-plaintext" id="addTitle" name="title">
	        		 <input type="color" class="form-control-color" id="addTextColor">
	        		 <input type="hidden" id="artistGroupNo" name="artistGroupNo"  />
	        	</div>
	        	<div class="mb-3">
					<label for="addContent" class="col-form-label">내용</label>
					<textarea class="form-control" id="addContent" ></textarea>
				</div>
				<div class="mb-3">
					<label for="addPlace" class="col-form-label">장소</label>
					<input type="text" name="place" id="addPlace" class="form-control"/>
				</div>
				<div class="mb-3">
					<label for="addDateUrl" class="col-form-label">경로</label><br/>
					<input type="text" name="url" id="addDateUrl" class="form-control" />
				</div>
				<div class="mb-3">
					<label for="addAllDayStatus" class="col-form-label">하루일정여부</label>
					<input type="checkbox"  id="addAllDayStatus" name="allDayStatus"> 
				</div>
				<div class="mb-3">
					<label for="date" class="col-form-label">일정</label>
					<input type="text" name="addDatetimes" id="date" class="form-control"/>
					<input type="hidden" name="start" id="addStartDate" />
					<input type="hidden" name="end" id="addEndDate" />
				</div>
				<div class="mb-3" id="backgroundColorDiv">
					<label for="addBackgroundColor" class="form-label">일정 배경색</label>
					<input type="color" class="form-control form-control-color" id="addBackgroundColor" >
				</div>
	        </div>
	        <div class="modal-footer">
			  <button type="button" class="btn btn-primary" id="addBtn">추가</button>
			  <button type="button" class="btn btn-secondary" id="addCancelBtn">취소</button>
			</div>
		</div>
	</div>
</div>

<!-- 상세, 수정 모달 창 -->
<div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="scheduleModalLabel"></h5>
				<button type="button" class="btn-close" aria-label="Close" id="closeBtn"></button>
			</div>
			<div class="modal-body">
	        	<div class="mb-3">
	        		 <label for="일정명" class="form-label">일정명</label>
	        		 <input type="text" class="form-control-plaintext" id="title" name="title" disabled="disabled">
	        		 <input type="color" class="form-control-color" id="textColor" style="display:none">
	        		 <input type="hidden" id="dateId" name="dateId" />
	        	</div>
	        	<div class="mb-3">
					<label for="content" class="col-form-label">내용</label>
					<textarea class="form-control" id="content" disabled="disabled"></textarea>
				</div>
				<div class="mb-3">
					<label for="place" class="col-form-label">장소</label>
					<input type="text" name="place" id="place" class="form-control" disabled="disabled"/>
				</div>
				<div class="mb-3">
					<label for="dateUrl" class="col-form-label">경로</label><br/>
					<a href="" id="datelink"></a>
					<input type="text" name="url" id="dateUrl" class="form-control" style="display:none"/>
				</div>
				<div class="mb-3">
					<label for="allDayCheck" class="col-form-label">하루일정여부</label>
					<input type="checkbox"  id="allDayStatus" name="allDayStatus" disabled="disabled"> 
				</div>
				<div class="mb-3">
					<label for="date" class="col-form-label">일정</label>
					<input type="text" name="datetimes" id="date" class="form-control" disabled="disabled"/>
					<input type="hidden" name="start" id="startDate" />
					<input type="hidden" name="end" id="endDate" />
				</div>
				<div class="mb-3" style="display:none" id="backgroundColorDiv">
					<label for="backgroundColor" class="form-label">일정 배경색</label>
					<input type="color" class="form-control form-control-color" id="backgroundColor" >
				</div>
	        </div>
	        <div class="modal-footer">
	          <button type="button" class="btn btn-danger" id="delete" style="display:none">삭제</button>
			  <button type="button" class="btn btn-warning" id="updateBtn">수정</button>
			  <button type="button" class="btn btn-secondary" id="cancelBtn">취소</button>
			</div>
		</div>
	</div>
</div>

</body>
<script type="text/javascript">

$(function(){
	fullCalendar();
	
	
	$("#allDayStatus").on("click",function(){
		let flag = false;
		
		let event = {
			start : $("#startDate").val(),
			end : $("#endDate").val()
		}
		let e = {
			event : event
		}
		
		if($("#allDayStatus").is(':checked')){
			flag = true;
			$("#allDayStatus").val('Y');
			console.log("체크됨");
			console.log($("#content").val());
			datePicker(e,flag);
		}else{
			flag = false;
			$("#allDayStatus").val('N');
			console.log("체크품")
			datePicker(e,flag);
		}
	});
	
	$("#updateBtn").on("click",function(){
		if($("#updateBtn").html() == '수정'){
			$("#datelink").attr("style","display:none");
			
			$("#textColor").attr("style","display:block");
			$("#dateUrl").attr("style","display:block");
			$("#backgroundColorDiv").attr("style","display:block");
			
			$("input").attr("disabled",false);
			$("#content").attr("disabled",false);
			
			$("#delete").attr("style","display:block");
			
			$("#updateBtn").html("저장");
			$("#updateBtn").attr("class","btn btn-primary");
		}else{
			let id = $("#dateId").val();
			
			let data = new FormData();
			
			data.append("title",$("#title").val());
			data.append("content",$("#content").val());
			data.append("place",$("#place").val());
			data.append("url",$("#dateUrl").val());
			data.append("allDayStatus",$("#allDayStatus").val());
			data.append("start",$("#startDate").val());
			data.append("end",$("#endDate").val());
			data.append("textColor",$("#textColor").val());
			data.append("backgroundColor",$("#backgroundColor").val());
			
			$.ajax({
				url : "/emp/schedule/dateUpdate/" + id,
				type : "post",
				data : data,
				processData : false,
				contentType : false,
				success : function(res){
					if(res == "OK"){
						Swal.fire({
							title : "수정 완료!",
							text : "정상적으로 수정이 완료되었습니다.",
							icon : "success",
							showConfirmButton : true
						}).then((result) => {
							location.href = "/emp/schedule/main";
						});
					}
				},
				error : function(error, status, thrown){
					console.log(error.status);
				},
				beforeSend : function(xhr) {
			        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
			    }
			});
		}
	});
	
	// 상세 수정 모달 닫았을 때
	$("#cancelBtn").on("click",function(){
		Swal.fire({
			title : "취소요청",
			text : "수정중인 정보는 저장되지 않습니다. 정말로 취소하시겠습니까?",
			icon : "question",
			showCancelButton : true,
			cancelButtonText : "아니오",
			confirmButtonText : "예",
		}).then((result) => {
			if(result.isConfirmed){
				$("#datelink").attr("style","display:block");
				
				$("#textColor").attr("style","display:none");
				$("#dateUrl").attr("style","display:none");
				$("#backgroundColorDiv").attr("style","display:none");
				
				$("#delete").attr("style","display:none");
				
				$("#title").attr("disabled",true);
				$("#place").attr("disabled",true);
				$("#allDayStatus").attr("disabled",true);
				$("input[name='datetimes']").attr("disabled",true);
				$("#content").attr("disabled",true);
				
				$("#updateBtn").html("수정");
				$("#updateBtn").attr("class","btn btn-warning");
				$('#scheduleModal').modal('hide');
			}else{
				return false;
			}
		});
	});
	
	// 상세 수정 모달 닫았을 때
	$("#closeBtn").on("click",function(){
		
		Swal.fire({
			title : "취소요청",
			text : "수정중인 정보는 저장되지 않습니다. 정말로 취소하시겠습니까?",
			icon : "question",
			showCancelButton : true,
			cancelButtonText : "아니오",
			confirmButtonText : "예",
		}).then((result) => {
			if(result.isConfirmed){
				$("#datelink").attr("style","display:block");
				
				$("#textColor").attr("style","display:none");
				$("#dateUrl").attr("style","display:none");
				$("#backgroundColorDiv").attr("style","display:none");
				
				$("#delete").attr("style","display:none");
				
				$("#title").attr("disabled",true);
				$("#place").attr("disabled",true);
				$("#allDayStatus").attr("disabled",true);
				$("input[name='datetimes']").attr("disabled",true);
				$("#content").attr("disabled",true);
				
				$("#updateBtn").html("수정");
				$("#updateBtn").attr("class","btn btn-warning");
				$('#scheduleModal').modal('hide');
			}else{
				return false;
			}
		});
	});
	
	$("#addScheduleBtn").on("click",function(){
		const eventModal = new bootstrap.Modal(document.getElementById('scheduleAddModal'));
		
		let flag = false; // 하루일정여부
		let e = null;
		
		$("#addAllDayStatus").on("click",function(){
			if($("#addAllDayStatus").is(':checked')){
				flag = true;
				$("#addAllDayStatus").val('Y');
				console.log("체크됨");
				datePicker(e,flag);
			}else{
				flag = false;
				$("#addAllDayStatus").val('N');
				console.log("체크품")
				datePicker(e,flag);
			}
		});
		
		datePicker(e,flag);
		
		eventModal.show();
	});
	
	$("#addBtn").on("click",function(){
		
		if($("#addAllDayStatus").is(':checked')){
			$("#addAllDayStatus").val('Y');
		}else{
			$("#addAllDayStatus").val('N');
		}
		
		let data = new FormData();
		data.append("artGroupNo",$("#artistGroupNo").val());
		data.append("title",$("#addTitle").val());
		data.append("content",$("#addContent").val());
		data.append("place",$("#addPlace").val());
		data.append("url",$("#addDateUrl").val());
		data.append("allDayStatus",$("#addAllDayStatus").val());
		data.append("start",$("#addStartDate").val());
		data.append("end",$("#addEndDate").val());
		data.append("textColor",$("#addTextColor").val());
		data.append("backgroundColor",$("#addBackgroundColor").val());
		
		$.ajax({
			url : "/emp/schedule/insert",
			type : "post",
			data : data,
			processData : false,
			contentType : false,
			success : function(res){
				if(res == "OK"){
					Swal.fire({
						title : "등록완료!",
						text : "정상적으로 등록이 완료되었습니다.",
						icon : "success",
						showConfirmButton : true
					}).then((result) => {
						location.href = "/emp/schedule/main";
					});
				}else{
					Swal.fire({
						title : "등록실패",
						text : "등록이 실패되었습니다. 다시 시도해주세요!",
						icon : "error",
						showConfirmButton : true
					}).then((result) => {
						location.href = "/emp/schedule/main";
					});
				}
			},
			error : function(error, status, thrown){
				console.log(error.status);
			},
			beforeSend : function(xhr) {
		        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
		    }
		});
		
	});
	
	$("#delete").on("click",function(){
		let id = $("#dateId").val();
		
		Swal.fire({
			title : "삭제하시겠습니까?",
			text : "삭제시 복구하실 수 없습니다.",
			icon : "question",
			showCancelButton : true,
			cancelButtonText : "아니오",
			confirmButtonText : "예",
		}).then((result) => {
			if(result.isConfirmed){
				$.ajax({
					url : "/emp/schedule/delete/" + id,
					type : "post",
					success : function(res){
						if(res == "OK"){
							Swal.fire({
								title : "삭제완료!",
								text : "정상적으로 삭제가 완료되었습니다.",
								icon : "success",
								showConfirmButton : true
							}).then((result) => {
								location.href = "/emp/schedule/main";
							});
						}else{
							Swal.fire({
								title : "삭제실패",
								text : "삭제가 실패되었습니다. 다시 시도해주세요!",
								icon : "error",
								showConfirmButton : true
							}).then((result) => {
								location.href = "/emp/schedule/main";
							});
						}
					},
					error : function(error, status, thrown){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				});
			}else{
				return false;
			}
		});
		
	});
	
	$("#addCancelBtn").on("click",function(){
		Swal.fire({
			title : "취소요청",
			text : "작성중인 정보는 저장되지 않습니다. 정말로 취소하시겠습니까?",
			icon : "question",
			showCancelButton : true,
			cancelButtonText : "아니오",
			confirmButtonText : "예",
		}).then((result) => {
			if(result.isConfirmed){
				$("#artistGroupNo").val("")
				$("#addTitle").val("")
				$("#addContent").val("")
				$("#addPlace").val("")
				$("#addDateUrl").val("")
				$("#addAllDayStatus").val("")
				$("#addStartDate").val("")
				$("#addEndDate").val("")
				$("#addTextColor").val("")
				$("#addBackgroundColor").val("")
				
				$('#scheduleAddModal').modal('hide');
			}else{
				return false;
			}
		});
	});
	
	$("#addCloseBtn").on("click",function(){
		Swal.fire({
			title : "취소요청",
			text : "작성중인 정보는 저장되지 않습니다. 정말로 취소하시겠습니까?",
			icon : "question",
			showCancelButton : true,
			cancelButtonText : "아니오",
			confirmButtonText : "예",
		}).then((result) => {
			if(result.isConfirmed){
				$("#artistGroupNo").val("")
				$("#addTitle").val("")
				$("#addContent").val("")
				$("#addPlace").val("")
				$("#addDateUrl").val("")
				$("#addAllDayStatus").val("")
				$("#addStartDate").val("")
				$("#addEndDate").val("")
				$("#addTextColor").val("")
				$("#addBackgroundColor").val("")
				
				$('#scheduleAddModal').modal('hide');
			}else{
				return false;
			}
		});
	});
});




function fullCalendar(){
	var calendarEl = document.getElementById('calendar');
	var calendar = new FullCalendar.Calendar(calendarEl, {
		initialView : 'dayGridMonth',
		editable : true,
		events : {
			url : "/emp/schedule/list",
			type : "get",
			success : function(res){
				console.log(res);
				$("#artistGroupNo").val(res[0].artGroupNo);
				return res;
			}
		},
		eventMouseEnter : function (info){
			// console.log("prop 찾기 : ",info.event.extendedProps)
			let {content, place } = info.event.extendedProps;
			// console.log(content,place);
			$("#toolContent").html(content);
			$("#toolPlace").html(place);
			const eventElementRect = info.el.getBoundingClientRect(); // 마우스 오버된 이벤트 요소의 화면상 위치/크기
            // const tooltipCurrentRect = tooltip.getBoundingClientRect(); // 현재 툴팁 크기 (내용 설정 후 정확해짐)

            // 페이지 스크롤 값 고려 (getBoundingClientRect는 뷰포트 기준)
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;

            // 툴팁을 이벤트 요소의 바로 위에 위치시키기
            // tooltip.offsetHeight는 툴팁 내용이 채워진 후의 실제 높이
            let topPosition = eventElementRect.top + scrollTop - tooltip.offsetHeight - 5; // 5px 간격
            let leftPosition = eventElementRect.left + scrollLeft + (eventElementRect.width / 2) - (tooltip.offsetWidth / 2); // 가로 중앙 정렬

            // 화면 가장자리 넘어가지 않도록 보정 (간단한 버전)
            if (leftPosition < 0) leftPosition = scrollLeft + 5;
            if (leftPosition + tooltip.offsetWidth > window.innerWidth + scrollLeft) {
                leftPosition = window.innerWidth + scrollLeft - tooltip.offsetWidth - 5;
            }
            if (topPosition < scrollTop) { // 화면 상단을 벗어날 경우
                topPosition = eventElementRect.bottom + scrollTop + 5; // 이벤트 요소 아래로 변경
            }

            tooltip.style.top = topPosition + 'px';
            tooltip.style.left = leftPosition + 'px';

            // 3. 툴팁 보이기
            tooltip.style.visibility = 'visible';
            tooltip.style.opacity = '1';
		},
		eventMouseLeave: function(info) {
            // 툴팁 숨기기
            tooltip.style.visibility = 'hidden';
            tooltip.style.opacity = '0';
        },
        eventDragStart: function() {
        	tooltip.style.visibility = 'hidden';
            tooltip.style.opacity = '0';
        },
        eventDrop : function(e){
        	let endDate = e.event.end;
        	
        	let flag = false;	// 하루 일정 여부
        	let startEndBool = true; // 시작인지 종료인지 여부
        	let id = e.event.id;
        	let allDayStatus = e.event.extendedProps.allDayStatus; // 하루 일정 정보 가져오기
        	
        	if(allDayStatus === 'Y'){
        		flag = true;
        	}
        	
        	let startDate = e.event.start;
        	let start = formatDate(startDate,flag,startEndBool);
        	
        	let end;
        	if(endDate == null){
        		startEndBool = false
        		end = formatDate(startDate,flag, startEndBool);
        	}else{
        		end = formatDate(endDate)
        	}
        	
        	
        	let data = new FormData();
        	data.append("start",start);
        	data.append("end", end);
        	
        	$.ajax({
        		url : "/emp/schedule/dateMove/" + id,
        		type : "post",
        		data : data,
        		processData : false,
        		contentType : false,
        		success : function(res){
        			console.log(res);
        		},
        		error : function(error, status, thrown){
        			console.log(error.status);
        		},
        		beforeSend : function(xhr) {
			        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
			    }
        	}); 
        },
        eventClick: function(e){
        	e.jsEvent.cancelBubble = true;		// 일정에 있는 url 막기
        	e.jsEvent.preventDefault();
        	
        	let modalTitle = $("#title");
        	let modalContent = $("#content");
        	let modalPlace = $("#place");
        	let modalUrl = $("#dateUrl");
        	let modalTextColor = $("#textColor");
        	let modalBackgroundColor = $("#backgroundColor");
        	let modalDateId = $("#dateId");
        	let link = $("#datelink");

        	const eventModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        	
        	let { title, url, textColor, backgroundColor, id } = e.event;
        	let { allDayStatus, content, place } = e.event.extendedProps;
        	
        	modalTitle.val(title);
        	modalContent.html(content);
        	modalPlace.val(place);
        	modalUrl.val(url);
        	modalTextColor.val(textColor);
        	modalBackgroundColor.val(backgroundColor);
        	modalDateId.val(id);
        	
        	link.attr("href",url);
        	link.html(title+"바로가기");
        	
        	let flag = false;	// 하루일정여부
        	
        	if(allDayStatus === 'Y'){
        		$("#allDayStatus").prop('checked',true);
        		$("#allDayStatus").val('Y');
	        	eventModal.show();
        		flag = true;
        		datePicker(e, flag);
        	}else{
        		$("#allDayStatus").prop('checked',false);
        		$("#allDayStatus").val('N');
        		eventModal.show();
        		flag = false;
        		datePicker(e, flag);
        	}
        	
        }
		
		
		
	});
	calendar.render();
}

// e : 클릭한 일정에 대한 정보
// flag : 하루 일정 여부
function datePicker(e, flag){
	
	let datePickerFormat = '';	// 날짜 표현 형식
	
	let timeSet = false;		// 시간 설정 여부
	
	// 하루 일정인지 판단
	if(flag){	// 하루 일정이면
		datePickerFormat = 'YYYY-MM-DD';
		timeSet = false;
		
	}else{		// 하루 일정이 아니라면
		datePickerFormat = 'YYYY-MM-DD HH:mm';
		timeSet = true;
	}
	
	if(e == null){
		
		let startVal, endVal;
		
		if(flag){
			startVal = formatDate(moment(),flag, true);
			endVal = formatDate(moment(),flag,false);
		}else{
			startVal = formatDate(moment());
			endVal = formatDate(moment());
		}
		
		$("#addStartDate").val(startVal);
		$("#addEndDate").val(endVal);
		
		$("input[name='addDatetimes']").daterangepicker({
			timePicker : timeSet,
			startDate: startVal,
			endDate : endVal,
		    locale: {
		      format: datePickerFormat,
		      applyLabel : "적용",
		      cancelLabel : "취소",
		      daysOfWeek : [
		    	  "일","월","화","수","목","금","토"
		      ],
		      monthNames : [
		    	  "1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"
		      ],
		      separator : " ~ "
		    },
		    drops : 'up'
		},function(start,end,label){
			$("#addStartDate").val(formatDate(start));
			$("#addEndDate").val(formatDate(end));
		});
		
	}else{
		console.log("datePicker : ",e);
		let startEndBool = false; // true = start 날짜 false = end 날짜
		
		let startDate = e.event.start;
		let endDate = e.event.end;
	
		let start = formatDate(startDate);
		let end;
		
		// 종료 날짜가 null이면
		if(endDate == null){
			end = formatDate(startDate,flag,startEndBool);	// 시작 날짜를 넣고 함수 실행
		}else{
			end = formatDate(endDate);	// null이 아니면 종료 날짜를 넣고 함수 실행 
		}
		
		// 임시로 넣기
		$("#startDate").val(start);
		$("#endDate").val(end);
		
		$("input[name='datetimes']").daterangepicker({
			timePicker : timeSet,
			startDate: start,
			endDate : end,
		    locale: {
		      format: datePickerFormat,
		      applyLabel : "적용",
		      cancelLabel : "취소",
		      daysOfWeek : [
		    	  "일","월","화","수","목","금","토"
		      ],
		      monthNames : [
		    	  "1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"
		      ],
		      separator : " ~ "
		    },
		    drops : 'up'
		},function(start,end,label){
			$("#startDate").val(formatDate(start));
			$("#endDate").val(formatDate(end));
			console.log("adsfa : ", formatDate(start),end)
		});
		
	}
			
	
	
}



function formatDate(updateDate, flag, startEndBool){
	
	if (!updateDate) return "";
	
	let date = new Date(updateDate);
	
	let year = date.getFullYear();
	let month = date.getMonth() + 1;
    let day = date.getDate();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();

    month = month >= 10 ? month : '0' + month;
    day = day >= 10 ? day : '0' + day;
    hour = hour >= 10 ? hour : '0' + hour;
    minute = minute >= 10 ? minute : '0' + minute;
    second = second >= 10 ? second : '0' + second;
    
    // 하루 일정 시작 일정 설정
    if(flag && startEndBool){
		hour = "00";
		minute = "00";
		second = "00";
	}else if(flag && !startEndBool){	// 하루 일정이면서 종료일정일 때
		console.log("하루 일정이면서 종료일정일 때")
		hour = "23";
		minute = "59";
		second = "59";
	}
	
	return year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second;
};

</script>
</html>