<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>굿즈샵 품목 관리 - DDTOWN 관리자 시스템</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <%@ include file="../../../modules/headerPart.jsp" %>
    <style>
        /* items_form.html 에만 적용될 추가/수정 스타일 */
        .item-form-container { background-color: #fff; padding: 25px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); }
        .item-form-header h2 { font-size: 1.8em; color: #2c3e50; margin-bottom: 20px; border-bottom: 1px solid #eee; padding-bottom: 15px; }
        
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #555; }
        .form-group input[type="text"], .form-group input[type="number"], .form-group select, .form-group textarea { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; font-size: 1em; }
        .form-group textarea { min-height: 120px; resize: vertical; }
        
        .form-row { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 20px; }
        
        .image-upload-area { border: 2px dashed #ddd; padding: 20px; text-align: center; border-radius: 4px; margin-bottom: 15px; }
        .image-upload-area.dragover { border-color: #3498db; background-color: #f7f9fc; }
        .image-preview-container { display: flex; flex-wrap: wrap; gap: 10px; margin-top: 15px; }
        .image-preview { position: relative; width: 100px; height: 100px; }
        .image-preview img { width: 100%; height: 100%; object-fit: cover; border-radius: 4px; }
        .image-preview .remove-image { position: absolute; top: -8px; right: -8px; background: #e74c3c; color: white; border: none; border-radius: 50%; width: 20px; height: 20px; cursor: pointer; font-size: 12px; }
        
        .form-actions { margin-top: 30px; text-align: right; }
        .form-actions .ea-btn { margin-left: 10px; }
    </style>
</head>
<body>
    <div class="emp-container">
        <%@ include file="../../modules/header.jsp" %>

        <div class="emp-body-wrapper">
            <%@ include file="../../modules/aside.jsp" %>
            <main class="emp-content">
                <section id="goodsItemFormSection" class="ea-section active-section">
                    <div class="item-form-container">
                        <div class="item-form-header">
                            <h2 id="formTitle">상품 등록</h2>
                        </div>

                        <form id="itemForm">
                            <div class="form-row">
                                <div class="form-group">
                                    <label for="itemName">상품명 <span class="required">*</span></label>
                                    <input type="text" id="itemName" name="itemName" required>
                                </div>
                                <div class="form-group">
                                    <label for="itemSku">상품코드 (SKU) <span class="required">*</span></label>
                                    <input type="text" id="itemSku" name="itemSku" required>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group">
                                    <label for="itemCategory">카테고리 <span class="required">*</span></label>
                                    <select id="itemCategory" name="itemCategory" required>
                                        <option value="">카테고리 선택</option>
                                        <option value="photocard">포토카드</option>
                                        <option value="album">앨범</option>
                                        <option value="lightstick">라이트스틱</option>
                                        <option value="clothing">의류</option>
                                        <option value="accessory">액세서리</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="itemPrice">판매가격 <span class="required">*</span></label>
                                    <input type="number" id="itemPrice" name="itemPrice" min="0" step="100" required>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group">
                                    <label for="itemStock">재고수량 <span class="required">*</span></label>
                                    <input type="number" id="itemStock" name="itemStock" min="0" required>
                                </div>
                                <div class="form-group">
                                    <label for="itemStatus">판매상태 <span class="required">*</span></label>
                                    <select id="itemStatus" name="itemStatus" required>
                                        <option value="selling">판매중</option>
                                        <option value="soldout">품절</option>
                                        <option value="hidden">숨김</option>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="itemDescription">상품설명 <span class="required">*</span></label>
                                <textarea id="itemDescription" name="itemDescription" required></textarea>
                            </div>

                            <div class="form-group">
                                <label>상품 이미지 <span class="required">*</span></label>
                                <div class="image-upload-area" id="imageUploadArea">
                                    <p>이미지를 드래그하거나 클릭하여 업로드하세요</p>
                                    <input type="file" id="imageUpload" multiple accept="image/*" style="display: none;">
                                    <button type="button" class="ea-btn" onclick="document.getElementById('imageUpload').click()">
                                        <i class="fas fa-upload"></i> 이미지 선택
                                    </button>
                                </div>
                                <div class="image-preview-container" id="imagePreviewContainer"></div>
                            </div>

                            <div class="form-actions">
                                <a href="/admin/goods/items/list" class="ea-btn">취소</a>
                                <button type="submit" class="ea-btn primary"><i class="fas fa-save"></i> 저장</button>
                            </div>
                        </form>
                    </div>
                </section>
            </main>
        </div>

        <footer class="emp-footer">
            <p>&copy; 2025 DDTOWN Entertainment. All rights reserved. (관리자 전용)</p>
        </footer>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);
        const itemId = urlParams.get('id');
        const isEditMode = !!itemId;

        if (isEditMode) {
            document.getElementById('formTitle').textContent = '상품 수정';
            console.log("Loading item data for editing, ID:", itemId);
            // --- 실제 애플리케이션에서는 서버에서 itemId로 상품 정보를 가져옵니다 ---
            // 예시 데이터 (프론트엔드 데모용)
            const sampleItem = {
                id: itemId,
                name: "아티스트 A 포토카드 세트 V.2",
                sku: "ARTISTA-PC-V2",
                category: "photocard",
                price: 15000,
                stock: 150,
                status: "selling",
                description: "아티스트 A의 미공개 포토카드 5종 세트입니다.\n한정 수량으로 제작되었으며, 각 카드 뒷면에는 특별 메시지가 담겨 있습니다.",
                images: [
                    { url: "https://via.placeholder.com/100.png?text=Card1", alt: "포토카드 1" },
                    { url: "https://via.placeholder.com/100.png?text=Card2", alt: "포토카드 2" },
                    { url: "https://via.placeholder.com/100.png?text=Card3", alt: "포토카드 3" }
                ]
            };

            document.getElementById('itemName').value = sampleItem.name;
            document.getElementById('itemSku').value = sampleItem.sku;
            document.getElementById('itemCategory').value = sampleItem.category;
            document.getElementById('itemPrice').value = sampleItem.price;
            document.getElementById('itemStock').value = sampleItem.stock;
            document.getElementById('itemStatus').value = sampleItem.status;
            document.getElementById('itemDescription').value = sampleItem.description;

            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            sampleItem.images.forEach(imgInfo => {
                const preview = document.createElement('div');
                preview.className = 'image-preview';
                preview.innerHTML = `
                    <img src="${imgInfo.url}" alt="${imgInfo.alt}">
                    <button type="button" class="remove-image" title="이미지 제거">&times;</button>
                `;
                imagePreviewContainer.appendChild(preview);
            });
        }

        // --- 이미지 업로드 관련 로직 ---
        const imageUploadArea = document.getElementById('imageUploadArea');
        const imageUpload = document.getElementById('imageUpload');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');

        imageUploadArea.addEventListener('dragover', function(e) {
            e.preventDefault();
            this.classList.add('dragover');
        });

        imageUploadArea.addEventListener('dragleave', function() {
            this.classList.remove('dragover');
        });

        imageUploadArea.addEventListener('drop', function(e) {
            e.preventDefault();
            this.classList.remove('dragover');
            const files = e.dataTransfer.files;
            handleFiles(files);
        });

        imageUpload.addEventListener('change', function() {
            handleFiles(this.files);
        });

        function handleFiles(files) {
            Array.from(files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const preview = document.createElement('div');
                        preview.className = 'image-preview';
                        preview.innerHTML = `
                            <img src="${e.target.result}" alt="상품 이미지">
                            <button type="button" class="remove-image" title="이미지 제거">&times;</button>
                        `;
                        imagePreviewContainer.appendChild(preview);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        imagePreviewContainer.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-image')) {
                e.target.parentElement.remove();
            }
        });

        // --- 폼 제출 로직 ---
        document.getElementById('itemForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            console.log("Form submitted with data:", Object.fromEntries(formData));
            alert(isEditMode ? "상품이 수정되었습니다. (서버 연동 필요)" : "상품이 등록되었습니다. (서버 연동 필요)");
            window.location.href = 'items_list.html';
        });
        // --- 폼 제출 로직 끝 ---

        // --- 사이드바 메뉴 로직 ---
        const navItems = document.querySelectorAll('.emp-sidebar .emp-nav-item');
        navItems.forEach(item => {
            const arrow = item.querySelector('.submenu-arrow');
            item.addEventListener('click', function(event) {
                if (this.classList.contains('has-submenu')) {
                    event.preventDefault();
                    const currentlyOpen = this.classList.contains('open');
                    document.querySelectorAll('.emp-sidebar > .emp-nav > ul > li > .has-submenu.open').forEach(openItem => {
                        if (openItem !== this) {
                            openItem.classList.remove('open');
                            const associatedSubmenuId = "submenu-" + openItem.dataset.menu;
                            const associatedSubmenu = document.getElementById(associatedSubmenuId);
                            if (associatedSubmenu) associatedSubmenu.style.display = 'none';
                            const openArrow = openItem.querySelector('.submenu-arrow');
                            if(openArrow) openArrow.style.transform = 'rotate(0deg)';
                        }
                    });
                    this.classList.toggle('open');
                    const submenuId = "submenu-" + this.dataset.menu;
                    const submenu = document.getElementById(submenuId);
                    if (submenu) {
                        submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                        if(arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
                    }
                }
            });
        });

        const currentFilename = window.location.pathname.split('/').pop();
        let activeParentMenu = null;
        let relatedPageLinkActivated = false;

        document.querySelectorAll('.emp-sidebar .emp-nav-item').forEach(link => {
            const linkFilename = link.getAttribute('href').split('/').pop();
            let isActivePage = (linkFilename === currentFilename);

            if (!isActivePage && linkFilename === 'items_list.html' &&
                (currentFilename.startsWith('items_form') || currentFilename.startsWith('items_detail'))) {
                isActivePage = true;
                relatedPageLinkActivated = true;
            }

            if (isActivePage) {
                link.classList.add('active');
                const parentSubmenu = link.closest('.emp-submenu');
                if (parentSubmenu) {
                    parentSubmenu.style.display = 'block';
                    activeParentMenu = parentSubmenu.previousElementSibling;
                    if (activeParentMenu && activeParentMenu.classList.contains('has-submenu')) {
                        activeParentMenu.classList.add('active', 'open');
                        const arrow = activeParentMenu.querySelector('.submenu-arrow');
                        if (arrow) arrow.style.transform = 'rotate(90deg)';
                    }
                } else if (link.classList.contains('has-submenu')) {
                     activeParentMenu = link;
                     link.classList.add('active', 'open');
                     const arrow = link.querySelector('.submenu-arrow');
                     if (arrow) arrow.style.transform = 'rotate(90deg)';
                }
                if (relatedPageLinkActivated && linkFilename === currentFilename && currentFilename !== 'items_list.html') {
                    link.classList.remove('active');
                }
            }
        });
        document.querySelectorAll('.emp-sidebar > .emp-nav > ul > li > .has-submenu').forEach(topLevelMenu => {
            if ((!activeParentMenu || topLevelMenu !== activeParentMenu) && !topLevelMenu.classList.contains('open') ) {
                const submenuId = "submenu-" + topLevelMenu.dataset.menu;
                const submenu = document.getElementById(submenuId);
                if (submenu) submenu.style.display = 'none';
                const arrow = topLevelMenu.querySelector('.submenu-arrow');
                if(arrow) arrow.style.transform = 'rotate(0deg)';
            }
        });
        // --- 사이드바 메뉴 로직 끝 ---

        // 로그아웃 버튼
        const adminLogoutBtn = document.getElementById('adminLogoutBtn');
        if (adminLogoutBtn) {
            adminLogoutBtn.addEventListener('click', function(event) {
                event.preventDefault();
                if (confirm("로그아웃 하시겠습니까?")) {
                    alert("로그아웃 되었습니다. (실제 로그아웃 처리는 서버에서)");
                }
            });
        }
    });
    </script>
</body>
</html> 