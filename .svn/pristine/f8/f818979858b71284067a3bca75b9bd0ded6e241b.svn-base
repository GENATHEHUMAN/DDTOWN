<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="jakarta.tags.core"%>
<%@ taglib prefix="fmt" uri="jakarta.tags.fmt"%>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>아티스트 관리 - DDTOWN 직원 포털</title>
    
    <%-- 기존 포털 공통 CSS --%>
    <link rel="stylesheet" href="<%=request.getContextPath()%>/resources/css/pages/emp_common.css">
    <link rel="stylesheet" href="<%=request.getContextPath()%>/resources/css/pages/pagination.css">
    <link rel="stylesheet" href="<%=request.getContextPath()%>/resources/css/pages/emp_portal_style.css">
    
    <%-- Font Awesome 및 jQuery CDN --%>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <%-- 사용자 제공 CSS (컨텐츠 영역 스타일) --%>
    <style>
        body { /* 기본 폰트는 emp_common.css 등에서 관리될 수 있으므로, 필요시 조정 */
            font-family: sans-serif;
        }
        main.emp-content { /* emp_common.css 와 충돌 가능성. 필요시 조정 */
            width: 90%; 
            margin: 20px auto;
        }
        /* artist-search-form 스타일 (기존 artist-search-box 와 유사) */
        .artist-search-form {
            margin-bottom: 20px;
            display: flex;
            gap: 10px;
            align-items: center;
        }
        .artist-search-form .ea-filter-select,
        .artist-search-form .ea-search-input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .artist-search-form .ea-search-input {
            flex-grow: 1;
        }
        .artist-search-form .ea-btn.primary {
            padding: 8px 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .artist-search-form .ea-btn.primary:hover {
            background-color: #0056b3;
        }
        
        /* ea-table 스타일 (기존 artist-table 과 유사) */
        table.ea-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            table-layout: fixed;
        }
        table.ea-table th, table.ea-table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
            vertical-align: middle;
            word-wrap: break-word;
        }
        table.ea-table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        th.col-profile-path, td.col-profile-path { width: 30%; }
        th.col-actions, td.col-actions { width: 10%; text-align: center; } /* 관리 버튼 중앙 정렬 */

        .ea-btn { /* 공통 버튼 스타일 */
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }
        .ea-btn.sm { font-size: 0.8em; padding: 4px 8px; }
        .ea-btn.primary { background-color: #007bff; color: white; }
        .ea-btn.primary:hover { background-color: #0056b3; }
        .ea-btn.outline { background-color: transparent; color: #007bff; border: 1px solid #007bff; }
        .ea-btn.outline:hover { background-color: #007bff; color: white; }
         .action-button { /* 이전 스타일과의 호환성 또는 다른 버튼에 사용될 수 있음 */
            padding: 6px 12px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 0.9em; 
        }
        .action-button:hover { background-color: #218838; }

        .modal-actions, .ea-form-actions { text-align: right; margin-top: 20px; }

        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0, 0, 0, 0.4); }
        .modal-content { background-color: #fefefe; margin: 10% auto; padding: 25px; border: 1px solid #888; width: 60%; max-width: 600px; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); border-radius: 5px; }
        .close-button { color: #aaa; float: right; font-size: 28px; font-weight: bold; }
        .close-button:hover, .close-button:focus { color: black; text-decoration: none; cursor: pointer; }
        .modal-content hr { margin-top: 5px; margin-bottom: 15px; }
        .modal-content div.form-group { margin-bottom: 15px; }
        .modal-content input[type="text"],
        .modal-content input[type="date"], /* 데뷔일 타입이 있다면 */
        .modal-content input[type="file"], 
        .modal-content textarea { width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 3px; margin-top: 4px; box-sizing: border-box; }
        .modal-content input[readonly] { background-color: #e9ecef; }
        .modal-content textarea { resize: vertical; }
        .form-group label { display: block; margin-bottom: 3px; font-weight: bold; }
        small { font-size: 0.85em; color: #6c757d; }
        
        /* 페이징 스타일 (기본) */
        .ea-pagination { text-align: center; margin-top: 20px; }
        .ea-pagination a, .ea-pagination strong {
            display: inline-block;
            padding: 6px 12px;
            margin: 0 2px;
            border: 1px solid #ddd;
            color: #007bff;
            text-decoration: none;
            border-radius: 4px;
        }
        .ea-pagination strong {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }
        .ea-pagination a:hover {
            background-color: #f0f0f0;
            border-color: #ccc;
        }
        .portal-welcome-message { /* 검색 결과 없을 때 메시지 스타일 */
            padding: 20px;
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 5px;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="emp-container">
        <header class="emp-header">
            <div class="emp-logo">
                <a href="<%=request.getContextPath()%>/emp_portal.jsp">DDTOWN 직원 포털</a>
            </div>
            <div class="emp-user-info">
                <span><i class="fas fa-user-circle"></i> 안녕하세요, <strong id="employee-name">홍길동</strong>님</span>
                <a href="#logout" class="emp-logout-btn"><i class="fas fa-sign-out-alt"></i> 로그아웃</a>
            </div>
        </header>
        <div class="emp-body-wrapper">
            <aside class="emp-sidebar">
                <nav class="emp-nav">
                    <ul>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="approval">
                                <i class="fas fa-file-signature"></i> 전자결재 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-approval">
                                <li><a href="<%=request.getContextPath()%>/1.approval/approval_draft.jsp" class="emp-nav-item">기안서 작성</a></li>
                                <li><a href="<%=request.getContextPath()%>/1.approval/approval_request_list.jsp" class="emp-nav-item">결재 요청 리스트</a></li>
                                <li><a href="<%=request.getContextPath()%>/1.approval/approval_box.jsp" class="emp-nav-item">결재 문서함</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="audition">
                                <i class="fas fa-microphone-alt"></i> 오디션 관리 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-audition">
                                <li><a href="<%=request.getContextPath()%>/2.audition/schedule_management.jsp" class="emp-nav-item">일정 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/2.audition/applicant_info.jsp" class="emp-nav-item">지원자 정보</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="community">
                                <i class="fas fa-users"></i> 아티스트 커뮤니티 관리 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-community">
                                <li>
                                    <a href="#" class="emp-nav-item has-submenu" data-menu="artist-mgmt">아티스트 관리 <span class="submenu-arrow">&gt;</span></a>
                                    <ul class="emp-submenu" id="submenu-artist-mgmt">
                                        <li><a href="<%=request.getContextPath()%>/emp/group/group-management" class="emp-nav-item">그룹 관리</a></li>
                                        <li><a href="<%=request.getContextPath()%>/emp/artist/artist-management" class="emp-nav-item">아티스트 관리</a></li>
                                    </ul>
                                </li>
                                <li><a href="<%=request.getContextPath()%>/community/notice_management.jsp" class="emp-nav-item">공지사항 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/post_management.jsp" class="emp-nav-item">게시물 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/live_management.jsp" class="emp-nav-item">라이브 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/schedule_management.jsp" class="emp-nav-item">일정 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/community/membership_management.jsp" class="emp-nav-item">멤버십 관리</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="#" class="emp-nav-item has-submenu" data-menu="concert">
                                <i class="fas fa-ticket-alt"></i> 콘서트 관리 <span class="submenu-arrow">&gt;</span>
                            </a>
                            <ul class="emp-submenu" id="submenu-concert">
                                <li><a href="<%=request.getContextPath()%>/4.concert/schedule_management.jsp" class="emp-nav-item">콘서트 일정 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/4.concert/notice_management.jsp" class="emp-nav-item">콘서트 공지사항 관리</a></li>
                                <li><a href="<%=request.getContextPath()%>/4.concert/seat_management.jsp" class="emp-nav-item">콘서트 좌석 관리</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="<%=request.getContextPath()%>/email_tool.jsp" class="emp-nav-item" data-menu="email">
                                <i class="fas fa-envelope-open-text"></i> 이메일 전송
                            </a>
                        </li>
                    </ul>
                </nav>
            </aside>
            
            <%-- 메인 컨텐츠 영역 시작 (사용자 제공 코드로 교체) --%>
            <main class="emp-content">
                <section class="ea-section">
                    <div class="ea-section-header">
                        <h2 style="margin-bottom: 15px;">아티스트 관리</h2>
                        <div class="ea-header-actions">
                            <form method="GET" action="${pageContext.request.contextPath}/emp/artist/artist-management" class="artist-search-form">
                                <select name="searchType" class="ea-filter-select">
                                    <option value="name" ${pagingVO.searchType == 'name' ? 'selected' : ''}>이름</option>
                                    <option value="content" ${pagingVO.searchType == 'content' ? 'selected' : ''}>소개글</option>
                                </select>
                                <input type="text" name="searchWord" class="ea-search-input" value="<c:out value='${pagingVO.searchWord}'/>" placeholder="검색어를 입력하세요...">
                                <input type="hidden" name="page" value="1"> <%-- 검색 시 항상 1페이지부터 --%>
                                <button type="submit" id="artist-search-btn-submit" class="ea-btn primary"><i class="fas fa-search"></i> 검색</button>
                            </form>
                        </div>
                    </div>

                    <c:if test="${not empty pagingVO.dataList}">
                        <table class="ea-table">
                            <thead>
                                <tr>
                                    <th>번호</th>
                                    <th class="col-profile-path">프로필 이미지 경로</th>
                                    <th>아티스트명</th>
                                    <th>수정일</th>
                                    <th class="col-actions">관리</th>
                                </tr>
                            </thead>
                            <tbody id="artist-table-body">
                                <c:forEach items="${pagingVO.dataList}" var="artist" varStatus="status">
                                    <tr>
                                        <td>${artist.artNo}</td>
                                        <td class="col-profile-path">
                                            <c:out value="${artist.artProfileImg }"/>
                                        </td>
                                        <td><c:out value="${artist.artNm }"/></td>
                                        <td>
                                            <fmt:formatDate value="${artist.artModDate }" pattern="yyyy-MM-dd HH:mm:ss" var="formattedModDate"/>
                                            <c:out value="${formattedModDate}"/>
                                        </td>
                                        <td class="col-actions">
                                            <button class="ea-btn sm outline edit-artist-btn"
                                                    data-artist-no="${artist.artNo}"
                                                    data-artist-nm="<c:out value='${artist.artNm}'/>"
                                                    data-artist-mod-date="${formattedModDate}"
                                                    data-artist-content="<c:out value='${artist.artContent}' escapeXml='true'/>"
                                                    data-artist-profileimg="<c:out value='${artist.artProfileImg}'/>">
                                                <i class="fas fa-edit"></i> 수정
                                            </button>
                                        </td>
                                    </tr>
                                </c:forEach>
                            </tbody>
                        </table>
                    </c:if>
                    <c:if test="${empty pagingVO.dataList}">
                        <div class="portal-welcome-message" style="text-align: center; margin-top:20px;">
                             <p>
                                <c:choose>
                                    <c:when test="${not empty pagingVO.searchWord}">
                                        '<c:out value="${pagingVO.searchWord}"/>'에 대한 검색 결과가 없습니다.
                                    </c:when>
                                    <c:otherwise>
                                        등록된 아티스트가 없습니다.
                                    </c:otherwise>
                                </c:choose>
                            </p>
                        </div>
                    </c:if>

                    <div id="pagingArea" class="ea-pagination">
                         ${pagingVO.pagingHTML}
                    </div>
                </section>
            </main>
        </div> 
    </div>

    <%-- 아티스트 정보 수정 모달 --%>
    <div id="editArtistModal" class="modal">
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h2>아티스트 정보 수정</h2>
             <form id="editArtistForm" class="ea-form">
                <input type="hidden" id="modalArtistNo" name="artNo">
                <div class="form-group">
                    <label for="modalArtistName">아티스트명:</label>
                    <input type="text" id="modalArtistName" name="artNm">
                </div>
                <div class="form-group">
                    <label for="displayArtistModDateSpan">최근 수정일:</label> 
                    <span id="displayArtistModDateSpan" style="display: block; margin-top: 4px; padding: 8px; background-color: #e9ecef; border-radius: 3px;"></span> 
                </div>
                <div class="form-group">
                    <label for="modalArtistContent">소개글:</label>
                    <textarea id="modalArtistContent" name="artContent" rows="4"></textarea>
                </div>
                <div class="form-group">
                    <label for="modalArtistProfileFileSelect">프로필 이미지 파일 선택:</label>
                    <input type="file" id="modalArtistProfileFileSelect" name="artistFile" accept="image/*">
                    <small>파일을 선택하면 아래 경로가 자동으로 완성됩니다. (실제 업로드 방식은 서버 설정에 따릅니다)</small>
                </div>
                <div class="form-group">
                    <label for="modalArtistProfileImgPath">서버 저장 경로 (또는 파일명):</label>
                    <input type="text" id="modalArtistProfileImgPath" name="artProfileImg" readonly placeholder="파일 선택 시 자동 완성됩니다.">
                     <small>예: /uploads/profile/artist/이미지파일명.jpg (실제 저장 경로는 서버에서 관리)</small>
                </div>

                <div class="ea-form-actions">
                    <button type="button" class="ea-btn primary" id="saveArtistChangesBtn"><i class="fas fa-save"></i> 저장</button>
                </div>
            </form>
        </div>
    </div>
    
    <%-- 푸터 Include --%>
    <%@ include file="../../modules/footerPart.jsp" %>

    <script>
              
        document.addEventListener('DOMContentLoaded', function() {
            const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
            navItemsWithSubmenu.forEach(item => {
                const arrow = item.querySelector('.submenu-arrow');
                item.addEventListener('click', function(event) {
                    if (this.getAttribute('href') === '#') {
                        event.preventDefault();
                    }
                    const parentLi = this.parentElement;
                    const submenu = this.nextElementSibling;

                    if (submenu && submenu.classList.contains('emp-submenu')) {
                        const parentUl = parentLi.parentElement;
                        if (parentUl) {
                            Array.from(parentUl.children).forEach(siblingLi => {
                                if (siblingLi !== parentLi) {
                                    const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                                    if (siblingSubmenuControl) {
                                        const siblingSubmenuElement = siblingSubmenuControl.nextElementSibling;
                                        siblingSubmenuControl.classList.remove('open');
                                        if (siblingSubmenuElement && siblingSubmenuElement.classList.contains('emp-submenu')) {
                                            siblingSubmenuElement.style.display = 'none';
                                        }
                                        const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                        if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                                    }
                                }
                            });
                        }
                    }
                    
                    this.classList.toggle('open');
                    if (submenu && submenu.classList.contains('emp-submenu')) {
                        submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                        if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
                    }
                });
            });

            // 현재 페이지 URL 기반으로 사이드바 메뉴 활성화
            const currentFullHref = window.location.href;
            document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
                if (link.href === currentFullHref) {
                    link.classList.add('active');
                    let currentActiveElement = link;
                    while (true) {
                        const parentLi = currentActiveElement.parentElement;
                        if (!parentLi) break;
                        const parentSubmenuUl = parentLi.closest('ul.emp-submenu');
                        if (parentSubmenuUl) {
                            parentSubmenuUl.style.display = 'block';
                            const controllingAnchor = parentSubmenuUl.previousElementSibling;
                            if (controllingAnchor && controllingAnchor.classList.contains('has-submenu')) {
                                controllingAnchor.classList.add('active', 'open');
                                const arrow = controllingAnchor.querySelector('.submenu-arrow');
                                if (arrow) arrow.style.transform = 'rotate(90deg)';
                                currentActiveElement = controllingAnchor;
                            } else break;
                        } else break;
                    }
                }
            });
        });

        // 사용자 제공 JavaScript (아티스트 수정, AJAX, 페이징 등)
        $(function() {
            const $editArtistModal = $('#editArtistModal');
            
            function openModal() { $editArtistModal.css('display', 'block'); }
            function closeModal() { $editArtistModal.css('display', 'none'); }

            $editArtistModal.find('.close-button').on('click', closeModal);
            $(window).on('click', function(event) {
                if ($(event.target).is($editArtistModal)) { closeModal(); }
            });

            $(document).on('click', '.edit-artist-btn', function() {
                const $button = $(this);
                $('#modalArtistNo').val($button.data('artist-no'));
                $('#modalArtistName').val($button.data('artist-nm'));
                $('#displayArtistModDateSpan').text($button.data('artist-mod-date'));
                $('#modalArtistContent').val($button.data('artist-content') || '');
                $('#modalArtistProfileImgPath').val($button.data('artist-profileimg') || '');
                $('#modalArtistProfileFileSelect').val('');
                openModal();
            });

            $('#modalArtistProfileFileSelect').on('change', function(event) {
                const files = event.target.files;
                if (files && files.length > 0) {
                    const fileName = files[0].name;
                    // 이 경로는 예시이며, 실제 파일 업로드 및 경로 관리는 서버에서 웹 접근 가능 경로로 처리해야 합니다.
                    // 예: /uploads/profile/artist/ + fileName
                    $('#modalArtistProfileImgPath').val("/upload/profile/artist/" + fileName); 
                } else {
                     $('#modalArtistProfileImgPath').val(''); // 파일 선택 안하면 비움
                }
            });

            $('#saveArtistChangesBtn').on('click', function() {
                const artistData = {
                    artNo: $('#modalArtistNo').val(),
                    artNm: $('#modalArtistName').val(),
                    artContent: $('#modalArtistContent').val(),
                    artProfileImg: $('#modalArtistProfileImgPath').val()
                    // artModDate는 서버에서 자동 업데이트되거나, 필요시 전송
                };

                $.ajax({
                    url: '${pageContext.request.contextPath}/emp/artist/update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(artistData),
                    beforeSend : function(xhr) {
                        var csrfHeader = "${_csrf.headerName}"; // Spring Security CSRF 헤더 이름
                        var csrfToken = "${_csrf.token}";       // Spring Security CSRF 토큰 값
                        if (csrfHeader && csrfToken) {
                            xhr.setRequestHeader(csrfHeader, csrfToken);
                        }
                    },
                    success: function(response) {
                        if(response && response.status === "success"){ // 컨트롤러 응답의 status 필드 확인
                            alert(response.message || '아티스트 정보가 성공적으로 저장되었습니다.');
                            closeModal(); 
                            window.location.reload();
                        } else {
                            alert(response.message || '저장 중 문제가 발생했습니다. (서버 응답 확인)');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("저장 실패:", status, error, xhr.responseText);
                        let errorMsg = '아티스트 정보 저장에 실패했습니다.';
                        try {
                            const errResponse = JSON.parse(xhr.responseText);
                            if (errResponse && errResponse.message) {
                                errorMsg += '\n오류: ' + errResponse.message;
                            } else if (xhr.responseText) {
                                 errorMsg += '\n서버 응답: ' + xhr.responseText.substring(0,200);
                            }
                        } catch(e) {
                            if (xhr.responseText) {
                                 errorMsg += '\n서버 응답: ' + xhr.responseText.substring(0,200);
                            }
                        }
                        alert(errorMsg);
                    }
                });
            });

            // 페이지네이션 로직
            const pagingArea = $('#pagingArea');
            if(pagingArea.length > 0) {
                pagingArea.on('click', 'a', function(event) { 
                    event.preventDefault();
                    const page = $(this).data('page');
                    
                    // 현재 URL에서 검색 파라미터 유지
                    const currentSearchUrl = new URL(window.location.href);
                    const searchType = currentSearchUrl.searchParams.get("searchType");
                    const searchWord = currentSearchUrl.searchParams.get("searchWord");

                    let targetPageUrl = '${pageContext.request.contextPath}/emp/artist/artist-management?page=' + page;

                    if (searchType && searchWord) {
                        targetPageUrl += '&searchType=' + encodeURIComponent(searchType);
                        targetPageUrl += '&searchWord=' + encodeURIComponent(searchWord);
                    }
                    window.location.href = targetPageUrl;
                });
            }
        });
    </script>
</body>
</html>