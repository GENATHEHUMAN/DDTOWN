<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c" %>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>
<%@ taglib uri="jakarta.tags.functions" prefix="fn" %>

<section id="alerts-content" class="mypage-section active-section">
    <div class="mypage-section-header">
        <h3>${pageTitle} <c:if test="${unreadCnt > 0}"><span class="badge badge-danger">${unreadCnt}</span></c:if></h3>
        <button type="button" id="btn-mark-all-alerts-read-content" class="btn-mypage-secondary small-btn">모두 읽음 처리</button>
    </div>

    
    <div id="alertListServerMessage" class="server-message"></div> 
    <c:if test="${not empty alertErrorMessage}"><div class="server-message error" style="display:block;">${alertErrorMessage}</div></c:if>
    <c:if test="${not empty alertSuccessMessage}"><div class="server-message success" style="display:block;">${alertSuccessMessage}</div></c:if>

    <div class="alert-list-container">
        <c:choose>
            <c:when test="${not empty alertList && fn:length(alertList) > 0}">
                <c:forEach var="alert" items="${alertList}">
                    <div class="alert-item ${alert.alertReadYn eq 'N' ? 'unread' : 'read'}" data-alert-no="${alert.alertNo}">
                        <div class="alert-icon-area">
                            <c:choose>
                                <c:when test="${alert.alertTypeCode eq 'NEW_REPLY'}"><i class="fas fa-comment-dots"></i></c:when>
                                <c:when test="${alert.alertTypeCode eq 'NEW_DM'}"><i class="fas fa-envelope"></i></c:when>
                                <c:when test="${alert.alertTypeCode eq 'CONCERT_NEW'}"><i class="fas fa-calendar-alt"></i></c:when>
                                
                                <c:otherwise><i class="fas fa-bell"></i></c:otherwise>
                            </c:choose>
                        </div>
                        <div class="alert-content-area">
                            <c:if test="${not empty alert.alertUrl}">
                                <a href="<c:url value='${alert.alertUrl}'/>" class="alert-link">
                                    <span class="message">${alert.alertContent}</span>
                                </a>
                            </c:if>
                            <c:if test="${empty alert.alertUrl}">
                                <span class="message">${alert.alertContent}</span>
                            </c:if>
                            <span class="timestamp">
                            	<fmt:formatDate value="${alert.alertCreateDate}" pattern="yyyy-MM-dd HH:mm:ss"/>
                            </span>
                        </div>
                        <div class="alert-actions-area">
                            <c:if test="${alert.alertReadYn eq 'N'}">
                                <button type="button" class="btn-mark-one-alert-read-content small-btn" data-alert-no="${alert.alertNo}">읽음</button>
                            </c:if>
                            <button type="button" class="btn-delete-one-alert-content small-btn" data-alert-no="${alert.alertNo}">삭제</button>
                        </div>
                    </div>
                </c:forEach>
            </c:when>
            <c:otherwise>
                <p class="no-alerts" style="padding: 20px; text-align: center; color: #777;">표시할 알림이 없습니다.</p>
            </c:otherwise>
        </c:choose>
    </div>
    <%-- 페이징 UI 추가 (필요시) --%>
</section>

<script>
$(function(){
    const alertListContent = $('#alerts-content'); // 현재 섹션
    const csrfToken = $("meta[name='_csrf']").attr("content");
    const csrfHeader = $("meta[name='_csrf_header']").attr("content");
    
    function displayAlertListServerMessage(message, isSuccess) {
        $('#alertListServerMessage').text(message || '처리 중 오류가 발생했습니다.')
                           .removeClass('success error')
                           .addClass(isSuccess ? 'success' : 'error')
                           .show();
        setTimeout(() => $('#alertListServerMessage').fadeOut(), 5000);
    }


    // 개별 알림 읽음 처리
    alertListContent.on('click', '.btn-mark-one-alert-read-content', function() {
        const alertNo = $(this).data('alertNo');
        const item = $(this).closest('.alert-item');
        const button = $(this);

        let headers = {}; headers[csrfHeader] = csrfToken;
        $.ajax({
            url: '<c:url value="/mypage/alerts/read"/>',
            type: 'POST',
            data: { alertNo: alertNo },
            headers: headers,
            success: function(response) {
                if (response.success) {
                    item.removeClass('unread').addClass('read');
                    button.remove();
                    displayAlertListServerMessage(response.message || '알림을 읽음 처리했습니다.', true);
                    // 헤더의 안 읽은 알림 개수 실시간 업데이트 필요 (공통 함수 호출 등)
                } else {
                    displayAlertListServerMessage(response.message || '알림 읽음 처리에 실패했습니다.', false);
                }
            },
            error: function() {
                displayAlertListServerMessage('알림 읽음 처리 중 서버 오류가 발생했습니다.', false);
            }
        });
    });

    // 개별 알림 삭제 처리
    alertListContent.on('click', '.btn-delete-one-alert-content', function() {
        const alertNo = $(this).data('alertNo');
        const item = $(this).closest('.alert-item');

        if (!confirm("이 알림을 삭제하시겠습니까?")) return;

        let headers = {}; headers[csrfHeader] = csrfToken;
        $.ajax({
            url: '<c:url value="/mypage/alerts/delete"/>',
            type: 'POST',
            data: { alertNo: alertNo },
            headers: headers,
            success: function(response) {
                if (response.success) {
                    item.fadeOut(function() { 
                        $(this).remove();
                        if (alertListContent.find('.alert-item').length === 0) {
                             alertListContent.find('.alert-list-container').html('<p class="no-alerts" style="padding: 20px; text-align: center; color: #777;">표시할 알림이 없습니다.</p>');
                        }
                    });
                    displayAlertListServerMessage(response.message || '알림을 삭제했습니다.', true);
                    // TODO: 헤더의 안 읽은 알림 개수 실시간 업데이트 필요
                } else {
                    displayAlertListServerMessage(response.message || '알림 삭제에 실패했습니다.', false);
                }
            },
            error: function() {
                displayAlertListServerMessage('알림 삭제 중 서버 오류가 발생했습니다.', false);
            }
        });
    });
    
    // 모두 읽음 처리
    $('#btn-mark-all-alerts-read-content').on('click', function() {
        if (!alertListContent.find('.alert-item.unread').length) {
            displayAlertListServerMessage('모두 이미 읽은 알림입니다.', true);
            return;
        }
        if (!confirm("모든 알림을 읽음으로 표시하시겠습니까?")) return;

        let headers = {}; headers[csrfHeader] = csrfToken;
        $.ajax({
            url: '<c:url value="/mypage/alerts/readAll"/>',
            type: 'POST',
            headers: headers,
            success: function(response) {
                if (response.success) {
                    alertListContent.find('.alert-item.unread').each(function() {
                        $(this).removeClass('unread').addClass('read');
                        $(this).find('.btn-mark-one-alert-read-content').remove();
                    });
                    displayAlertListServerMessage(response.message || '모든 알림을 읽음 처리했습니다.', true);
                    // 헤더의 안 읽은 알림 개수 0으로 업데이트
                } else {
                    displayAlertListServerMessage(response.message || '모든 알림 읽음 처리에 실패했습니다.', false);
                }
            },
            error: function() {
                displayAlertListServerMessage('모든 알림 읽음 처리 중 서버 오류가 발생했습니다.', false);
            }
        });
    });
});
</script>